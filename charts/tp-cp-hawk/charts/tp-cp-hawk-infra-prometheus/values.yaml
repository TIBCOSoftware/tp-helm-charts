# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

enabled: true
global:
  enableLogging: true
  cp:
    enableResourceConstraints: true
    data:
      SYSTEM_OTEL_COLLECTOR_PORT: "4318"
  # Pod Security Context configuration
  # This configuration ensures that the pod is run with non-root privileges for enhanced security.
  # The user, group, and filesystem group IDs are all set to 1000.
  # The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
  # The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
  # The sysctls configuration allows the platform hybrid proxy to bind to low ports (below 1024) as a non-root user.
  # This is achieved by setting the 'net.ipv4.ip_unprivileged_port_start' sysctl to 0.
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: "Always"
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    # It specifies that privilege escalation is not allowed for security reasons.
    # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
    prometheus:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - CAP_NET_RAW
          - ALL
    prometheusds:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - CAP_NET_RAW
          - ALL

# Resource values for production like setup
resources:
  prometheus:
    requests:
      cpu: 200m
      memory: 1024Mi
    limits:
      cpu: 500m
      memory: 2048Mi
  prometheusds:
    requests:
      cpu: 20m
      memory: 50Mi
    limits:
      cpu: 100m
      memory: 100Mi

## Images
##
## Control what images to use
images:
  prometheus:
    repository:
    image:
      name: hawk-prometheus
      pullPolicy: IfNotPresent
  prometheusds:
    repository:
    image:
      name: hawk-prometheus-discoveryservice
      pullPolicy: IfNotPresent
      # tag: 120
      tag: "1.6.0.12"

# Liveness and Readiness probe setting for Prometheus container
promLivenessProbe:
  successThreshold: 1
  failureThreshold: 10
  initialDelaySeconds: 15
  periodSeconds: 15
  timeoutSeconds: 10
  httpGet:
    path: /
    port: prometheus
    scheme: HTTP
promReadinessProbe:
  successThreshold: 1
  failureThreshold: 10
  initialDelaySeconds: 12
  periodSeconds: 15
  timeoutSeconds: 10
  httpGet:
    path: /
    port: prometheus
    scheme: HTTP

# Liveness and Readiness probe setting for Prometheus DS container
promDSLivenessProbe:
  successThreshold: 1
  failureThreshold: 5
  initialDelaySeconds: 15
  periodSeconds: 15
  timeoutSeconds: 10
  httpGet:
    path: /target/hawkconsole
    port: prometheus-ds
    scheme: HTTP
promDSReadinessProbe:
  successThreshold: 1
  failureThreshold: 5
  initialDelaySeconds: 12
  periodSeconds: 15
  timeoutSeconds: 10
  httpGet:
    path: /target/hawkconsole
    port: prometheus-ds
    scheme: HTTP
