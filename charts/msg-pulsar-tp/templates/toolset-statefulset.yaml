#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.toolset }}
{{-  $apdParams := include "need.msg.apd.params" . | fromYaml }}
{{-  $stsname := printf "%s-%s" (include  "pulsar.fullname" . ) .Values.toolset.component }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ $stsname }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    {{ include "msg.dp.mon.annotations" . | indent 4 }}
    platform.tibco.com/quorum-min: "1"
    platform.tibco.com/quorum-strategy: "active-active"
  labels:
    tib-msg-stsname: "{{ $stsname }}"
    app.kubernetes.io/name: "{{ $stsname }}"
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.toolset.component }}
spec:
  serviceName: "{{ $stsname }}"
  replicas: {{ .Values.toolset.replicaCount | default (include "apd.sts.replicas" (dict "comp" "toolset" "param" $apdParams ))}}
  updateStrategy:
    type: OnDelete
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.toolset.component }}
  template:
    metadata:
      labels:
        tib-msg-stsname: "{{ $stsname }}"
        app.kubernetes.io/name: "{{ $stsname }}"
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.toolset.component }}
{{- include "apd.sts.size.labels" (dict "comp" "toolset" "param" $apdParams ) | nindent 8 }}
      annotations:
        {{- if .Values.toolset.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/toolset-configmap.yaml") . | sha256sum }}
        {{- end }}
{{- with .Values.toolset.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      enableServiceLinks: false
      nodeSelector:
        kubernetes.io/os: linux
    {{- if .Values.toolset.nodeSelector }}
{{ toYaml .Values.toolset.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.toolset.tolerations }}
      tolerations:
{{ toYaml .Values.toolset.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.toolset.gracePeriod }}
      serviceAccountName: "{{ $apdParams.apd.toolset.serviceAccount }}"
      {{ include "msg.dp.security.pod" $apdParams | nindent 6 }}
      containers:
      - name: "{{ $stsname }}"
        image: "{{ template "pulsar.imageFullName" (dict "image" .Values.images.broker "root" .) }}"
        imagePullPolicy: "{{ template "pulsar.imagePullPolicy" (dict "image" .Values.images.broker "root" .) }}"
        {{ include "msg.dp.security.container" $apdParams | nindent 8 }}
        resources:
{{- include "apd.sts.resources" (dict "comp" "toolset" "param" $apdParams "Values" .Values ) | nindent 10 }}
        command: ["bash", "-c"]
        # exec /usr/local/watchdog/bin/wait-for-shutdown.sh  ;
        args:
        - >
          source /boot/pulsar-setup.bash ; 
          bin/apply-config-from-env.py conf/client.conf;
          bin/apply-config-from-env.py conf/bookkeeper.conf;
        {{- if .Values.toolset.additionalCommand }}
          {{ .Values.toolset.additionalCommand }}
        {{- end }}
          {{- include "pulsar.toolset.zookeeper.tls.settings" . | nindent 10 }}
          ( mkdir -p /pulsar/logs/boot ; cd /pulsar/logs/boot ;
              for x in /boot/mk-*.sh ; do bash < $x ; done | tee -a boot.out ) ;
          ( mkdir -p /data/boot ; cp /boot/*.sh /data/boot/ ; chmod +x /data/boot/*.sh ) ;
          exec /usr/local/watchdog/bin/watchdog  ; 
        ports:
        - name: ops-shell
          containerPort: 8376
          # Requires websocket upgrade support
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8376
          initialDelaySeconds: 3
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 4
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8376
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        env:
        {{ include "msg.dp.stdenv" $apdParams | nindent 8 }}
        - name: MY_SVC_HOST
          value: "$(MY_POD_NAME).{{ $stsname }}.{{ .Release.Namespace }}.svc"
        - name: STS_NAME
          value: "{{ $stsname }}"
        - name: ALLOWED_HOSTNAMES
          value: "localhost,127.0.0.1,$(MY_SVC_HOST),{{ $apdParams.dp.cpHostname | default "no-cp-host" }},{{ $apdParams.toolset.lbHost}}"
        - name: TCM_WATCHDOG_LOG_FILE
          value: /pulsar/logs/watchdog.log
        - name: TCM_WATCHDOG_CONFIG
          value: "/pulsar/logs/boot/toolset.wd.yaml"
        - name: TCM_WD_PORT
          value: "{{ $apdParams.apd.ports.watchdogPort }}"
        - name: TCM_WATCHDOG_HOSTPORT
          # note: $(MY_POD_NAME) will be one of {{ $stsname }}-[012]
          value: "$(MY_POD_NAME):$(TCM_WD_PORT)"
        - name: COMMAND
          value: "/data/boot/ops-pulsar-bash-shell.sh"
        envFrom:
        - configMapRef:
            name: "{{ $stsname }}"
        volumeMounts:
        - mountPath: /pulsar/logs
          {{ include "msg.pv.vol.mount" $apdParams.apd.logs | nindent 10 }}
        {{- if eq "sharedPvc" $apdParams.apd.logs.storageType }}
        - mountPath: /logs
          {{- $opsVol := (dict "volName" "ops" "subPath" "." "storageType" "sharedPvc" "storageName" $apdParams.apd.logs.storageName ) -}}
          {{ include "msg.pv.vol.mount" $opsVol | nindent 10 }}
        {{- end }}
        - mountPath: /config
          {{ include "msg.pv.vol.mount" $apdParams.apd.params | nindent 10 }}
        - mountPath: /boot
          {{ include "msg.pv.vol.mount" $apdParams.apd.boot | nindent 10 }}
        - mountPath: /data
          {{ include "msg.pv.vol.mount" $apdParams.apd.toolsetData | nindent 10 }}
        - mountPath: /pulsar/conf
          {{ include "msg.pv.vol.mount" $apdParams.apd.conf | nindent 10 }}
        - mountPath: /pulsar/conf/log4j2.yaml
          {{ include "msg.pv.vol.mount" $apdParams.apd.log4j2 | nindent 10 }}
        - mountPath: /var/tmp
          {{ include "msg.pv.vol.mount" $apdParams.apd.vartmp | nindent 10 }}
        - mountPath: /tmp
          {{ include "msg.pv.vol.mount" $apdParams.apd.vartmp | nindent 10 }}
        {{- if .Values.auth.authentication.enabled }}
        {{- if eq .Values.auth.authentication.provider "jwt" }}
        - mountPath: "/pulsar/tokens"
          name: client-token
          readOnly: true
        {{- end }}
        {{- end }}
        {{- if and .Values.tls.enabled (or .Values.tls.broker.enabled .Values.tls.proxy.enabled) }}
        - mountPath: "/pulsar/certs/proxy-ca"
          name: proxy-ca
          readOnly: true
        {{- end}}
        {{- if .Values.toolset.extraVolumeMounts }}
{{ toYaml .Values.toolset.extraVolumeMounts | indent 8 }}
        {{- end }}
        {{- include "pulsar.toolset.certs.volumeMounts" . | nindent 8 }}
      volumes:
      {{ include "msg.pv.vol.def" $apdParams.apd.boot | nindent 6 }}
        {{- if eq "use-pulsar-data" $apdParams.apd.logs.storageType }}
      {{ include "msg.pv.vol.def" $apdParams.apd.msgData | nindent 6 }}
        {{- else }}
      {{ include "msg.pv.vol.def" $apdParams.apd.logs | nindent 6 }}
        {{- end }}
      {{ include "msg.pv.vol.def" $apdParams.apd.log4j2 | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.vartmp | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.params | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.toolsetData | nindent 6 }}
      {{- if .Values.auth.authentication.enabled }}
      {{- if eq .Values.auth.authentication.provider "jwt" }}
      - name: client-token
        secret:
          secretName: "{{ .Release.Name }}-token-{{ .Values.auth.superUsers.client }}"
          items:
            - key: TOKEN
              path: client/token
      {{- end}}
      {{- end}}
      {{- if and .Values.tls.enabled (or .Values.tls.broker.enabled .Values.tls.proxy.enabled) }}
      - name: proxy-ca
        secret:
          secretName: "{{ .Release.Name }}-{{ .Values.tls.ca_suffix }}"
          items:
            - key: ca.crt
              path: ca.crt
      {{- end}}
      {{- if .Values.toolset.extraVolumes }}
{{ toYaml .Values.toolset.extraVolumes | indent 6 }}
      {{- end }}
      {{- include "pulsar.toolset.certs.volumes" . | nindent 6 }}
      {{- include "pulsar.imagePullSecrets" . | nindent 6}}
  volumeClaimTemplates:
        {{- if eq "use-pulsar-data" $apdParams.apd.logs.storageType }}
  {{ include "msg.pv.vol.vct" $apdParams.apd.msgData | nindent 2 }}
        {{- else }}
  {{ include "msg.pv.vol.vct" $apdParams.apd.logs | nindent 2 }}
        {{- end }}
{{- end }}
