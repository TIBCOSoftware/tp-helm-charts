#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.bookkeeper }}
{{-  $apdParams := include "need.msg.apd.params" . | fromYaml }}
{{-  $stsname := printf "%s-%s" ( include "pulsar.fullname" . ) .Values.bookkeeper.component }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    {{ include "msg.dp.mon.annotations" . | indent 4 }}
    platform.tibco.com/quorum-min: "2"
    platform.tibco.com/replica-min: "3"
    platform.tibco.com/quorum-strategy: "active-active"
    # platform.tibco.com/is-in-quorum: "http://localhost:8000/api/v1/bookie/is_ready"
    platform.tibco.com/is-in-quorum: "http://localhost:8000/api/v1/bookie/state"
  labels:
    tib-msg-stsname: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
    app.kubernetes.io/name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.bookkeeper.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
  replicas: {{ .Values.bookkeeper.replicaCount | default (include "apd.sts.replicas" (dict "comp" "bookkeeper" "param" $apdParams ))}}
  selector:
    matchLabels:
      tib-msg-stsname: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.bookkeeper.component }}
  updateStrategy:
{{ toYaml .Values.bookkeeper.updateStrategy | indent 4 }}
  podManagementPolicy: {{ .Values.bookkeeper.podManagementPolicy }}
  template:
    metadata:
      labels:
        tib-msg-stsname: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        app.kubernetes.io/name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.bookkeeper.component }}
        platform.tibco.com/scrape_o11y: "true"
{{- include "apd.sts.size.labels" (dict "comp" "bookkeeper" "param" $apdParams ) | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.bookkeeper.ports.http }}"
        prometheus.io/path: /metrics
        {{- if .Values.bookkeeper.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/bookkeeper-configmap.yaml") . | sha256sum }}
        {{- end }}
{{- with .Values.bookkeeper.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      enableServiceLinks: false
      nodeSelector:
        kubernetes.io/os: linux
    {{- if .Values.bookkeeper.nodeSelector }}
{{ toYaml .Values.bookkeeper.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.bookkeeper.tolerations }}
      tolerations:
{{ toYaml .Values.bookkeeper.tolerations | indent 8 }}
    {{- end }}
      topologySpreadConstraints:
{{ include "msg.node.skew" (dict "params" $apdParams.apd "comp" .Values.bookkeeper.component ) | indent 8}}
{{ include "msg.zone.skew" (dict "params" $apdParams.apd "comp" .Values.bookkeeper.component ) | indent 8}}
      terminationGracePeriodSeconds: {{ .Values.bookkeeper.gracePeriod }}
      serviceAccountName: "{{ $apdParams.apd.bookie.serviceAccount }}"
      {{- if .Values.bookkeeper.securityContext }}
      securityContext:
{{ toYaml .Values.bookkeeper.securityContext | indent 8 }}
      {{- else }}
      {{ include "msg.dp.security.pod" $apdParams | nindent 6 }}
      {{- end }}
      initContainers:
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before deploying the bookies
      - name: pulsar-bookkeeper-verify-clusterid
        image: "{{ template "pulsar.imageFullName" (dict "image" .Values.images.bookie "root" .) }}"
        imagePullPolicy: "{{ template "pulsar.imagePullPolicy" (dict "image" .Values.images.bookie "root" .) }}"
        {{ include "msg.dp.security.container" $apdParams | nindent 8 }}
        resources:
{{- include "apd.sts.resources" (dict "comp" "bookkeeper" "param" $apdParams "Values" .Values ) | nindent 10 }}
        command: ["bash", "-c"]
        args:
        # only reformat bookie if bookkeeper is running without persistence
        - >
          cp -R /pulsar-conf/* /pulsar/conf/ ;
          {{- include "pulsar.bookkeeper.init.verify_cluster_id" . | nindent 10 }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        env:
        {{ include "msg.dp.stdenv" $apdParams | nindent 8 }}
        volumeMounts:
        - mountPath: /boot
          {{ include "msg.pv.vol.mount" $apdParams.apd.boot | nindent 10 }}
        - mountPath: /pulsar/logs
          {{ include "msg.pv.vol.mount" $apdParams.apd.logs | nindent 10 }}
        - mountPath: /pulsar/conf
          {{ include "msg.pv.vol.mount" $apdParams.apd.conf | nindent 10 }}
        {{- include "pulsar.bookkeeper.certs.volumeMounts" . | nindent 8 }}
      containers:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        image: "{{ template "pulsar.imageFullName" (dict "image" .Values.images.bookie "root" .) }}"
        imagePullPolicy: "{{ template "pulsar.imagePullPolicy" (dict "image" .Values.images.bookie "root" .) }}"
        {{ include "msg.dp.security.container" $apdParams | nindent 8 }}
        {{- if .Values.bookkeeper.probe.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /api/v1/bookie/state
            port: {{ .Values.bookkeeper.ports.http }}
          initialDelaySeconds: {{ .Values.bookkeeper.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.bookkeeper.probe.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.bookkeeper.probe.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.bookkeeper.probe.liveness.failureThreshold }}
        {{- end }}
        {{- if .Values.bookkeeper.probe.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /api/v1/bookie/is_ready
            port: {{ .Values.bookkeeper.ports.http }}
          initialDelaySeconds: {{ .Values.bookkeeper.probe.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.bookkeeper.probe.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.bookkeeper.probe.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.bookkeeper.probe.readiness.failureThreshold }}
        {{- end }}
        {{- if .Values.bookkeeper.probe.startup.enabled }}
        startupProbe:
          httpGet:
            path: /api/v1/bookie/is_ready
            port: {{ .Values.bookkeeper.ports.http }}
          initialDelaySeconds: {{ .Values.bookkeeper.probe.startup.initialDelaySeconds }}
          periodSeconds: {{ .Values.bookkeeper.probe.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.bookkeeper.probe.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.bookkeeper.probe.startup.failureThreshold }}
        {{- end }}
        resources:
{{- include "apd.sts.resources" (dict "comp" "bookkeeper" "param" $apdParams "Values" .Values ) | nindent 10 }}
        command: ["bash", "-c"]
        args:
        - >
          source /boot/pulsar-setup.bash /pulsar/bin/pulsar bookie ; 
        {{- if .Values.bookkeeper.additionalCommand }}
          {{ .Values.bookkeeper.additionalCommand }}
        {{- end }}
          bin/apply-config-from-env.py conf/client.conf;
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          {{- include "pulsar.bookkeeper.zookeeper.tls.settings" . | nindent 10 }}
          OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec /usr/local/watchdog/bin/watchdog
        ports:
        - name: "{{ .Values.tcpPrefix }}bookie"
          containerPort: {{ .Values.bookkeeper.ports.bookie }}
        - name: http
          containerPort: {{ .Values.bookkeeper.ports.http }}
        env:
        {{ include "msg.dp.stdenv" $apdParams | nindent 8 }}
        - name: STS_NAME
          value: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        - name: DP_HAS_CLUSTER_ROLE
          value: {{ $apdParams.dp.enableClusterScopedPerm | quote }}
        - name: TCM_WATCHDOG_CONFIG
          value: "/pulsar/logs/bookie-wd.yml"
        - name: POD_DISK_MON
          value: "/pulsar/data,/pulsar/logs"
        - name: PULSAR_LOG_FILE
          value: $(MY_POD_NAME).log
        - name: PULSAR_LOG_DIR
          value: /pulsar/logs
        - name: PULSAR_LOG_APPENDER
          value: Console
        # DEBUG:
        - name: BOOKIE_ID
          value: "$(MY_POD_NAME).{{ $stsname }}.{{ template "pulsar.namespace" . }}.svc.cluster.local:{{ .Values.bookkeeper.ports.bookie }}"
        - name: BOOKIE_GROUP
          value: "{{ $apdParams.apd.name }}"
        - name: BOOKIE_RACK
          value: "compute-on-startup"
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        volumeMounts:
        - mountPath: /boot
          {{ include "msg.pv.vol.mount" $apdParams.apd.boot | nindent 10 }}
        - mountPath: /pulsar/logs
          {{ include "msg.pv.vol.mount" $apdParams.apd.logs | nindent 10 }}
        - mountPath: /pulsar/data/bookkeeper/ledgers
          {{ include "msg.pv.vol.mount" $apdParams.apd.msgData | nindent 10 }}
        - mountPath: /pulsar/data/bookkeeper/journal
          {{ include "msg.pv.vol.mount" $apdParams.apd.journal | nindent 10 }}
        - mountPath: /pulsar/conf
          {{ include "msg.pv.vol.mount" $apdParams.apd.conf | nindent 10 }}
        - mountPath: /pulsar/conf/log4j2.yaml
          {{ include "msg.pv.vol.mount" $apdParams.apd.log4j2 | nindent 10 }}
        - mountPath: /var/tmp
          {{ include "msg.pv.vol.mount" $apdParams.apd.vartmp | nindent 10 }}
        - mountPath: /tmp
          {{ include "msg.pv.vol.mount" $apdParams.apd.vartmp | nindent 10 }}
        {{- if .Values.bookkeeper.extraVolumeMounts }}
{{ toYaml .Values.bookkeeper.extraVolumeMounts | indent 8 }}
        {{- end }}
        {{- include "pulsar.bookkeeper.certs.volumeMounts" . | nindent 8 }}
      volumes:
      {{ include "msg.pv.vol.def" $apdParams.apd.boot | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.logs | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.msgData | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.journal | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.log4j2 | nindent 6 }}
      {{ include "msg.pv.vol.def" $apdParams.apd.vartmp | nindent 6 }}
      {{- include "pulsar.bookkeeper.certs.volumes" . | nindent 6 }}
      {{- include "pulsar.imagePullSecrets" . | nindent 6}}
      {{- if .Values.bookkeeper.extraVolumes }}
{{ toYaml .Values.bookkeeper.extraVolumes | indent 6 }}
      {{- end }}
{{- if and (and .Values.persistence .Values.volumes.persistence) .Values.bookkeeper.volumes.persistence}}
  volumeClaimTemplates:
  {{ include "msg.pv.vol.vct" $apdParams.apd.logs | nindent 2 }}
  {{ include "msg.pv.vol.vct" $apdParams.apd.msgData | nindent 2 }}
  {{ include "msg.pv.vol.vct" $apdParams.apd.journal | nindent 2 }}
{{- end }}
{{- end }}
