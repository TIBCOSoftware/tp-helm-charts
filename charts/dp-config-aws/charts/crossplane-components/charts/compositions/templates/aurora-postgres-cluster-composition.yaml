{{/*
Copyright Â© 2025. Cloud Software Group, Inc.
This file is subject to the license terms contained
in the license file that is distributed with this file.
*/}}

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: compositeauroraclusters.database.platform.tibco.com
  labels:
    provider: provider-aws-aurora-cluster
    {{- include "compositions.labels" . | nindent 4 }}
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: database.platform.tibco.com/v1alpha1
    kind: CompositeAuroraCluster
  patchSets:
    - name: RegionParameter
      patches:
        - fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.region
    - name: TagsParameter
      patches:
        - fromFieldPath: spec.parameters.tags
          toFieldPath: spec.forProvider.tags
  resources:
    - name: securitygroup
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: SecurityGroup
        spec: 
          deletionPolicy: Delete
          providerConfigRef:
            name: aws-provider-config
          forProvider:
            region: us-west-2
            vpcId: ""
            groupName: "cp-aurora-cluster-sg"
            description: "Security group for Aurora cluster"
            ingress:
              - fromPort: ""
                toPort: ""
                ipProtocol: tcp
                ipRanges:
                  - cidrIp: ""
            egress:
              - fromPort: -1
                toPort: -1
                ipProtocol: "-1"
                ipRanges:
                  - cidrIp: "0.0.0.0/0"
            tags: []
      patches:
        - patchSetName: RegionParameter
          type: PatchSet
        - patchSetName: TagsParameter
          type: PatchSet
        - fromFieldPath: "spec.parameters.prefix"
          toFieldPath: "spec.forProvider.groupName"
          transforms:
            - type: string
              string:
                fmt: "%s-aurora-cluster-sg"
        - fromFieldPath: "spec.parameters.vpcId"
          toFieldPath: "spec.forProvider.vpcId"
        - fromFieldPath: "spec.parameters.nodeCIDR"
          toFieldPath: "spec.forProvider.ingress[0].ipRanges[0].cidrIp"
        - fromFieldPath: "spec.parameters.port"
          toFieldPath: "spec.forProvider.ingress[0].fromPort"
        - fromFieldPath: "spec.parameters.port"
          toFieldPath: "spec.forProvider.ingress[0].toPort"
        - fromFieldPath: "spec.parameters.additionalIngressRules"
          toFieldPath: "spec.forProvider.ingress[1]"
    - name: dbsubnetgroup
      base:
        apiVersion: database.aws.crossplane.io/v1beta1
        kind: DBSubnetGroup
        spec:
          deletionPolicy: Delete
          providerConfigRef:
            name: aws-provider-config
          forProvider:
            description: "Subnet group for Aurora cluster"
            subnetIds: []
      patches:
        - patchSetName: RegionParameter
          type: PatchSet
        - fromFieldPath: "spec.parameters.subnetIds"
          toFieldPath: "spec.forProvider.subnetIds"
        - fromFieldPath: "spec.parameters.prefix"
          toFieldPath: "metadata.labels['db-subnet-group-reference']"
          transforms:
            - type: string
              string:
                fmt: "%s-db-subnet-group"
    - name: dbclusterparametergroup
      base:
        apiVersion: rds.aws.crossplane.io/v1alpha1
        kind: DBClusterParameterGroup
        spec:
          providerConfigRef:
            name: aws-provider-config
          forProvider:
            description: "Parameter group for Aurora cluster"
      patches:
        - patchSetName: RegionParameter
          type: PatchSet
        - patchSetName: TagsParameter
          type: PatchSet
        - fromFieldPath: "spec.parameters.dbParameterGroupFamily"
          toFieldPath: "spec.forProvider.dbParameterGroupFamily"
        - fromFieldPath: "spec.parameters.groupFamilyParameters"
          toFieldPath: "spec.forProvider.parameters"    
    - name: dbcluster
      base:
        apiVersion: rds.aws.crossplane.io/v1alpha1
        kind: DBCluster
        spec:
          providerConfigRef:
            name: aws-provider-config
          forProvider:
            copyTagsToSnapshot: true
            # matchControllerRef to use the dbClusterParameterGroupName from same controller
            dbClusterParameterGroupNameSelector:
              matchControllerRef: true
            # matchControllerRef to use the dbSubnetGroup from same controller
            dbSubnetGroupNameSelector:
              matchControllerRef: true
            enableIAMDatabaseAuthentication: false
            # matchControllerRef to use the vpcSecurityGroup from same controller
            vpcSecurityGroupIDSelector:
              matchControllerRef: true
          writeConnectionSecretToRef:
            namespace: "crossplane-system"
      patches:
        - patchSetName: RegionParameter
          type: PatchSet
        - patchSetName: TagsParameter
          type: PatchSet
        - fromFieldPath: "metadata.uid"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-aurora-cluster"
        - fromFieldPath: "spec.parameters.prefix"
          toFieldPath: "metadata.labels['aurora-cluster-reference']"
          transforms:
            - type: string
              string:
                fmt: "%s-aurora-cluster"
        - fromFieldPath: "spec.parameters.allowMajorVersionUpgrade"
          toFieldPath: "spec.forProvider.allowMajorVersionUpgrade"
        - fromFieldPath: "spec.parameters.applyImmediately"
          toFieldPath: "spec.forProvider.applyImmediately"
        - fromFieldPath: "spec.parameters.autogeneratePassword"
          toFieldPath: "spec.forProvider.autogeneratePassword"
        - fromFieldPath: "spec.parameters.autoMinorVersionUpgrade"
          toFieldPath: "spec.forProvider.autoMinorVersionUpgrade"
        - fromFieldPath: "spec.parameters.backupRetentionPeriod"
          toFieldPath: "spec.forProvider.backupRetentionPeriod"
        - fromFieldPath: "spec.parameters.databaseName"
          toFieldPath: "spec.forProvider.databaseName"
        - fromFieldPath: "spec.parameters.deletionProtection"
          toFieldPath: "spec.forProvider.deletionProtection"
        - fromFieldPath: "spec.parameters.enableGlobalWriteForwarding"
          toFieldPath: "spec.forProvider.enableGlobalWriteForwarding"
        - fromFieldPath: "spec.parameters.enablePerformanceInsights"
          toFieldPath: "spec.forProvider.enablePerformanceInsights"
        - fromFieldPath: "spec.parameters.engine"
          toFieldPath: "spec.forProvider.engine"
        - fromFieldPath: "spec.parameters.engineMode"
          toFieldPath: "spec.forProvider.engineMode"
        - fromFieldPath: "spec.parameters.engineVersion"
          toFieldPath: "spec.forProvider.engineVersion"
        - fromFieldPath: "spec.parameters.finalDBSnapshotIdentifier"
          toFieldPath: "spec.forProvider.finalDBSnapshotIdentifier"
        # required for secondary cluster
        - fromFieldPath: "spec.parameters.globalClusterIdentifier"
          toFieldPath: "spec.forProvider.globalClusterIdentifier"
        - fromFieldPath: "spec.parameters.kmsKeyId"
          toFieldPath: "spec.forProvider.kmsKeyID"
        - fromFieldPath: "spec.parameters.masterUsername"
          toFieldPath: "spec.forProvider.masterUsername"
        - fromFieldPath: "spec.parameters.masterUserPasswordSecretRef"
          toFieldPath: "spec.forProvider.masterUserPasswordSecretRef"
        - fromFieldPath: "spec.parameters.performanceInsightsKmsKeyId"
          toFieldPath: "spec.forProvider.performanceInsightsKMSKeyID"
        - fromFieldPath: "spec.parameters.port"
          toFieldPath: "spec.forProvider.port"
        - fromFieldPath: "spec.parameters.skipFinalSnapshot"
          toFieldPath: "spec.forProvider.skipFinalSnapshot"
        - fromFieldPath: "spec.parameters.storageEncrypted"
          toFieldPath: "spec.forProvider.storageEncrypted"
        - fromFieldPath: "spec.parameters.storageType"
          toFieldPath: "spec.forProvider.storageType"
        - fromFieldPath: "spec.parameters.restoreFrom"
          toFieldPath: "spec.forProvider.restoreFrom"
      connectionDetails:
        - fromConnectionSecretKey: username
        - fromConnectionSecretKey: password
        - fromConnectionSecretKey: endpoint
        - fromConnectionSecretKey: readerEndpoint
          name: reader_endpoint
        - fromConnectionSecretKey: port