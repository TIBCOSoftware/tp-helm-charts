{{/*
Copyright Â© 2024. Cloud Software Group, Inc.
This file is subject to the license terms contained
in the license file that is distributed with this file.
*/}}

{{ $efsKind := "TibcoEFS" }}
{{ $efsSuffix := "efs" }}
{{- if .Values.efs }}
{{- if eq .Values.efs.create true }}
{{- if .Values.efs.storageClass }}
{{- if eq .Values.efs.storageClass.create true }}
{{ $efsKind = "TibcoEFSSC" }}
{{ $efsSuffix = "efs-sc" }}
{{- end }}
{{- end }}
{{- if .Values.efs.persistentVolume }}
{{- if eq .Values.efs.persistentVolume.create true }}
{{ $efsKind = "TibcoEFSPV" }}
{{ $efsSuffix = "efs-pv" }}
{{- end }}
{{- end }}
apiVersion: filesystem.platform.tibco.com/v1alpha1
kind: {{ $efsKind }}
metadata:
  name: {{ .Values.commonResourcePrefix }}-efs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "claims.labels" . | nindent 4 }}
    claim-name: {{ .Values.commonResourcePrefix }}-{{ $efsSuffix }}
spec:
  parameters:
    region: {{ include "claims.cloud-region" . }}
    vpcId: {{ include "claims.net-vpc-identifier" . }}  
    nodeCIDR: {{ include "claims.net-node-cidr" . }}
    subnetIds:
    {{- $privateSubnets := (include "claims.net-private-subnets" .) }}
    {{- range (split "\n" $privateSubnets) }}
    {{ . | indent 2 }}
    {{- end }}
    prefix: {{ .Values.commonResourcePrefix }}
    {{- with .Values.efs }}
    {{- $mandatory_params := .mandatoryConfigurationParameters }}
    {{- /* mandatory parameters */ -}}
    {{- toYaml .mandatoryConfigurationParameters | nindent 4 }}
    {{- /* additional parameters */ -}}
    {{- if .additionalConfigurationParameters }}
    {{- with .additionalConfigurationParameters }}
    {{- range $paramKey, $paramValue := . }}
    {{- if $paramValue }}
    {{ $paramKey }}: {{ $paramValue }}
    {{- end }}
    {{- end -}}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- if or .Values.commonTags .Values.efs.resourceTags }}
    tags:
    {{- range $key, $value := .Values.commonTags }}
      - key: {{ $key }}
        value: {{ $value }}
    {{- end }}
    {{- range $key, $value := .Values.efs.resourceTags }}
      - key: {{ $key }}
        value: {{ $value }}
    {{- end }}
    {{- end }}
    {{- if eq .Values.efs.storageClass.create true }}
    {{- with .Values.efs.storageClass }}
    storageClassName: {{ .name }}
    mountOptions:
      {{- toYaml .mountOptions | nindent 4 }}
    parameterOptions:
    {{- range $key, $value := .parameters }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
    allowVolumeExpansion: {{ .allowVolumeExpansion }}
    reclaimPolicy: {{ .reclaimPolicy }}
    volumeBindingMode: {{ .volumeBindingMode }}
    {{- end }}
    {{- end }}
    {{- if eq .Values.efs.persistentVolume.create true }}
    {{- with .Values.efs.persistentVolume }}
    persistentVolumeName: {{ .name }}
    accessModes:
      {{- toYaml .accessModes | nindent 4 }}
    reclaimPolicy: {{ .reclaimPolicy }}
    {{- if .storageClassName -}}
    storageClassName: {{ .storageClassName }}
    {{- end }}
    storage: {{ .storage }}
    volumeMode: {{ .volumeMode }}
    {{- end }}
    {{- end }}
  compositionSelector:
    matchLabels:
      provider: "provider-aws-{{ $efsSuffix }}"
  writeConnectionSecretToRef:
    name: {{ .Values.efs.connectionDetailsSecret }}
{{- end }}
{{- end }}