# Copyright Â© 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

## CONTEXT

# set to false if you want to skip deploying this chart
enabled: true

# Global section will apply to this chart and all of its subcharts.
global:
  cp:
    data:
  external:
    region: ""
    environment: ""
  # In local vagrant setup,
  # .Values.global.enableLogging variable can be set to false to disable starting fluentbit side-car containers
  enableLogging: true

  fluentbit:
    image:
      name: "common-fluentbit"
      tag: "4.0.3"
    probes:
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/v1/health
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
          - CAP_NET_RAW

config:
  HTTP_REQUEST_TIMEOUT: "120000"
  IDLE_TIME_SECONDS: "1800"
  WEB_SERVER_LOG_ENABLED: "true"
  BW_WEBSERVER_IMAGE_TAG: "673"

replicaCount: 1

hpa:
  cpu: 70
  memory: 70
  maxReplicas: 3
  minReplicas: 1  
  
volumes:
  bwwebserver:
    mountPath: /usr/share/nginx/html
    subPath: integration

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
      - CAP_NET_RAW

bwwebserver:
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1024Mi
fluentbit:
  resources:
    requests:
      cpu: 50m
      memory: 100Mi
    limits:
      cpu: 100m
      memory: 150Mi

probes:
  readinessProbe:
    httpGet:
      scheme: HTTP
      path: "/api/v1/version"
      port: 3000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 1
    successThreshold: 1
  livenessProbe:
    httpGet:
      scheme: HTTP
      path: "/api/v1/version"
      port: 3000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 1
  startupProbe: {}

nodeSelector:
  kubernetes.io/os: linux

affinity: {}

tolerations: []

#topologySpreadConstraints: []
