{{- $targetTag := (.Values.tibcoHub.image).tag | required ".Values.tibcoHub.image.tag is required." }}
{{- $dot := . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: capability-contribution-{{ .Values.capability.name }}-{{ randAlphaNum 4 | lower }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.cloud.tibco.com/created-by: {{ .Values.capability.name }}
    app.kubernetes.io/name: capability-contribution-{{ .Values.capability.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600 # wait for 1 hour before deleting the pod and job
  template:
    metadata:
      labels:
        app.kubernetes.io/name: capability-contribution-{{ .Values.capability.name }}
        {{- include "tp-cp-tibcohub-contrib.networkPolicyLabels" . | nindent 8 }}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      {{- if .Values.podSecurityContext}}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end}}
      containers:
      - name: container-image-extractor
        image: {{ include "tp-cp-tibcohub-contrib.image.registry" .}}{{"/"}}{{ include "tp-cp-tibcohub-contrib.image.repository" .}}{{"/"}}{{ .Values.containerImageExtractor.image.name }}:{{ .Values.containerImageExtractor.image.tag}}
        imagePullPolicy: IfNotPresent
        {{- with $.Values.probes.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $.Values.securityContext }}
        securityContext:
        {{- toYaml $.Values.securityContext | nindent 10 }}
        {{- end }}
        {{- if eq (include "tp-cp-tibcohub-contrib.enableResourceConstraints" $dot ) "true" }}
        resources:
        {{- toYaml $.Values.scripts.resources | nindent 10 }}
        {{- end }}
        env:
        - name: DOCKER_REGISTRY
          value: {{ include "tp-cp-tibcohub-contrib.image.registry" .}}           # docker registry where source image is present
        - name: SOURCE_DOCKER_IMAGE
          value: "{{ include "tp-cp-tibcohub-contrib.image.registry" .}}/{{ include "tp-cp-tibcohub-contrib.image.repository" .}}/{{ .Values.tibcoHub.image.name }}:{{ .Values.tibcoHub.image.tag }}"               # source docker image name
        - name: IMAGE_TEMP_DIR
          value: "/tmp/tmp-{{ .Values.capability.name }}" # temporary directory to be used by container-image-extractor for downloading and extracting docker image
        - name: SOURCE_DIRS 
          value: {{ .Values.source.directory | quote }}               # directory in SOURCE_DOCKER_IMAGE which needs to be copied to TARGET_DIRS 
        - name: TARGET_DIRS
          value: {{ .Values.target.directory | quote }}         # directory in CP EFS  
        - name: LOG_LEVEL
          value: debug
        {{- if (include "tp-cp-tibcohub-contrib.container-registry.custom-cert-secret" $dot) }}
        - name: SSL_CERT_DIR
          value: "/etc/certs/"
        {{- end }}
        volumeMounts:
        - mountPath: /efs
          name: store-vol
          subPath: tsc/contributors
        - mountPath: /tmp
          name: temp
        - name: kaniko-vol
          mountPath: /kaniko/.docker
# mount this secret only if private container registry is configured for CP.
{{- if (include "tp-cp-tibcohub-contrib.container-registry.secret" .) }}
        - mountPath: /tibco/containerregistry
          name: container-registry-secret
{{- end }}
# mount this secret only if private container registry with custom certs is configured for CP.
{{- if (include "tp-cp-tibcohub-contrib.container-registry.custom-cert-secret" $dot) }}
        - mountPath: /etc/certs
          name: container-registry-custom-cert-secret
          readOnly: true
{{- end }}
      volumes:
        - name: temp
          emptyDir:
            sizeLimit: 500Mi
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "tp-cp-tibcohub-contrib.pvc-name" . }}
        - emptyDir: {}
          name: kaniko-vol
{{- if (include "tp-cp-tibcohub-contrib.container-registry.custom-cert-secret" $dot) }}
        - name: container-registry-custom-cert-secret
          secret:
            defaultMode: 420
            secretName: {{ include "tp-cp-tibcohub-contrib.container-registry.custom-cert-secret" $dot }}
{{- end }}
{{- if (include "tp-cp-tibcohub-contrib.container-registry.secret" .) }}
        - name: container-registry-secret
          secret:
            secretName: {{ include "tp-cp-tibcohub-contrib.container-registry.secret" . }}
      imagePullSecrets:
        - name: {{ include "tp-cp-tibcohub-contrib.container-registry.secret" . }}
{{- end }}