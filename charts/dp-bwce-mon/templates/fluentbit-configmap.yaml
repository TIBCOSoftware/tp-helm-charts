# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

{{ if and .Values.enabled .Values.global.cp.logging.fluentbit.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "dp-bwce-mon.fullname" . }}-fluentbit-config
  labels:
    {{- include "dp-bwce-mon.labels" . | nindent 4 }}
data:
  fluent-bit.conf: |
    [SERVICE]
      Flush             1
      Log_Level         info
      Daemon            off
      Parsers_File      parsers.conf
      HTTP_Server     On
      HTTP_Listen     0.0.0.0
      HTTP_Port       2020

    @INCLUDE input.conf
    @INCLUDE filter.conf
    @INCLUDE output.conf

  input.conf: |
    [INPUT]
      Name              tail
      Tag               dp.${POD_NAMESPACE}.${POD_NAME}.${POD_ID}.${CONTAINER_NAME}
      Path              /var/log/pods/bwce-mon.log
      multiline.parser  docker, cri
      DB                /var/log/pods/flb_kube.db
      Mem_Buf_Limit     5MB
      Skip_Long_Lines   On
      Refresh_Interval  10

  filter.conf: |
    [FILTER]
      Name              record_modifier
      Match             dp.*
      Remove_key        stream
      Remove_key        date
      Remove_key        _p
    [FILTER]
      Name              parser
      Match             dp.*
      key_name          log
      parser            json_decode
      Reserve_Data      On
      Preserve_Key      On
    [FILTER]
      Name lua
      Match dp.*
      Script update_record.lua
      Call update_record

  output.conf: |
    [OUTPUT]
      Name   stdout
      Match  dp.*
      Format json
    
    [OUTPUT]
      Name                 opentelemetry
      Match                dp.*
      Host                 otel-services.${POD_NAMESPACE}.svc.cluster.local
      Port                 4318
      Logs_uri             /v1/logs
      Log_response_payload True
      Tls                  Off
      Tls.verify           Off

  parsers.conf: |
    [PARSER]
      Name              json_decode
      Format            regex
      Regex             ^(?<log>.*)$
      Time_Key          time
      Time_Format       %Y-%m-%dT%H:%M:%S.%L
      Time_Keep         On
      Decode_Field_As   json log
  update_record.lua: |
    function update_record(tag, timestamp, record)
      for key, val in pairs(record) do
        if(key ~= "time" ) then
            local newMsg = { msg = record.log }
            record.log = newMsg
         end
      end
      return 2, timestamp, record
    end
{{- end }}
