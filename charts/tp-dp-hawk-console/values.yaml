#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


# Resources
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  requests:
    cpu: 200m
    memory: 1024Mi
  limits:
    cpu: 1000m
    memory: 3072Mi

# no of replicas
replicaCount: "1"

image:
  name: hawk-console
  tag: "1.5.0.30"
  pullPolicy: IfNotPresent

nodeSelector:
  kubernetes.io/os: linux

affinity: {}

tolerations: {}

global:
  cp:
    cpHostname: ""
    dataplaneId: dp1
    cpInstanceId: cp1
    subscriptionId: sub1
    controlTower:
      authToken: ""
      metricAuthToken: ""
    enableResourceConstraints: true
    resources:
      storage:
        storageClassName: ""
      serviceaccount:
        serviceAccountName: ""
    containerRegistry:
      url: "reldocker.tibco.com"
      secret:
      repository: "tibco-platform-docker-prod"
    logging:
      # The fluentbit configuration section.
      # It specifies that the fluentbit should not run as a non-root user and the user ID should be 0 (root).
      # Privilege escalation is not allowed for security reasons.
      # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
      # GitHub issue: https://github.com/fluent/fluent-bit/issues/872#issuecomment-827763207, https://github.com/kyma-project/kyma/pull/11657/files
      fluentbit:
        enabled: true
        image:
          name: common-fluentbit
          tag: 3.1.4
        # Resources
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            cpu: 10m
            memory: 15Mi
          limits:
            cpu: 50m
            memory: 30Mi
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - CAP_NET_RAW
              - ALL
enableIngress: true
ingress:
  annotations: {}
  pathPrefix: /tibco/agent/infra/hawkconsole/
  className: "tibco-dp-{{ .Values.global.cp.dataplaneId}}"  # Ex: nginx, haproxy
  hostName: "dp-{{ .Values.global.cp.dataplaneId}}.platform.local"

hawkconsole:
  hawkData:
    volClaimTemplateName: hawk-console-data
    subPath: hawk/hawkconsole
    emsCertSubPath: hawk/emscerts
    pvcStorageSize: 2Gi
    # Changing this on upgrade is not a legal STS Ugprades
    # so match the 1.4.0 GA value to avoid breakage.
    pvcAccessMode: ReadWriteMany
  # The number of successive failed probes before indicating readiness failure.
  readinessFailureThreshold: 10

  # The initial delay for readiness probes in seconds.
  readinessInitialDelaySeconds: 12

  # The period between readiness probes.
  readinessPeriodSeconds: 15

  # The timeout for readiness probes.
  readinessTimeoutSeconds: 10

  # The number of successive  probes before indicating readiness success.
  readinessSuccessThreshold: 1

  # The number of successive failed probes before indicating lives failure.
  livenessFailureThreshold: 10

  # The initial delay for liveness probes in seconds.
  livenessInitialDelaySeconds: 15

  # The period between liveness probes.
  livenessPeriodSeconds: 15

  # The timeout for liveness probes.
  livenessTimeoutSeconds: 10

  # The number of successive failed probes before indicating lives success.
  livenessSuccessThreshold: 1
  # Configure Heap size and other java options
  javaOptions: "-Xms1g -Xmx3g"

  # Configure log level, Accepted values are ERROR, INFO, DEBUG and TRACE
  # default log mode is INFO
  log:
    level: INFO

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # This section of the configuration is for the cp proxy.
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  dpHawkConsole:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - CAP_NET_RAW
        - ALL

# Message Gateway additional settings
msggw:
  basename: ""
  image: ""
dp:
  pullSecret: ""
  registry: ""
  repo: ""
  pullPolicy: ""
  serviceAccount: ""
