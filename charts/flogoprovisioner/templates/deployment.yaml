# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

{{ $fullName := include "flogoprovisioner.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flogoprovisioner.fullname" . }}
  labels:
    {{- include "flogoprovisioner.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "flogoprovisioner.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "flogoprovisioner.selectorLabels" . | nindent 8 }}
        networking.platform.tibco.com/kubernetes-api: enable
        egress.networking.platform.tibco.com/internet-web: enable
    spec:
      imagePullSecrets:
      - name: {{ .Values.global.cp.containerRegistry.secret }}
      {{- if .Values.global.cp.resources.serviceaccount.serviceAccountName }}
      serviceAccountName: {{ .Values.global.cp.resources.serviceaccount.serviceAccountName }}
      {{- else }}
      serviceAccountName: {{ include "flogoprovisioner.sa" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: server
            - containerPort: {{ .Values.publicApiService.port }}
              name: publicapiserver
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "flogoprovisioner.image.registry" .}}{{"/"}}{{ include "flogoprovisioner.image.repository" .}}{{"/"}}flogo-provisioner:{{ .Values.global.flogoprovisioner.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: v1/liveness
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range $filename, $content :=  .Values.config }}
            {{- if $content }}
            - name: {{ $filename }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-serviceconfig
                  key: {{ $filename }}
            {{- end }}
            {{- end }}
            - name: DATAPLANE_ID
              value: {{ .Values.global.cp.dataplaneId }}
            - name: INSTANCE_ID
              value: {{ .Values.global.cp.instanceId }}
            - name: FLOGO_PROVISIONER_BUILD
              value: "{{ .Values.global.flogoprovisioner.image.tag }}"
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: PUBLIC_API_SERVER_PORT
              value: "{{ .Values.publicApiService.port }}"
            - name: CP_DOMAIN
              value: {{ include "flogoprovisioner.cp.domain" . }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_PULL_SECRET
              value: {{ .Values.global.cp.containerRegistry.secret }}
            - name: APP_INIT_SOURCE_REGISTRY
              value: {{ include "flogoprovisioner.image.registry" .}}{{"/"}}{{ include "flogoprovisioner.appinit.image.repository" .}}{{"/"}}
            - name: SOURCE_REGISTRY
              value: {{ include "flogoprovisioner.image.registry" .}}{{"/"}}{{ include "flogoprovisioner.image.repository" .}}{{"/"}}
            - name: FLUENT_BIT_SIDECAR_IMAGE
              value: {{ include "flogoprovisioner.image.registry" .}}{{"/"}}{{ include "flogoprovisioner.appinit.image.repository" .}}{{"/"}}{{ .Values.global.flogoprovisioner.logging.image.name }}:{{ .Values.global.flogoprovisioner.logging.image.tag }}
            - name: OTEL_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "flogoprovisioner.o11yservice.configmap" . }}
                  key: otel-recvservice-name
                  optional: true
            - name: OTEL_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "flogoprovisioner.o11yservice.configmap" . }}
                  key: otel-recvservice-port
                  optional: true
        {{- if .Values.global.flogoprovisioner.logging.enabled }}
        - name: fluent-bit
          image: {{ include "flogoprovisioner.image.registry" .}}{{"/"}}{{ include "flogoprovisioner.appinit.image.repository" .}}{{"/"}}{{ .Values.global.flogoprovisioner.logging.image.name }}:{{ .Values.global.flogoprovisioner.logging.image.tag }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: CONTAINER_NAME
              value: {{ .Chart.Name }}
          volumeMounts:
            - name: dockercontainerlogs
              mountPath: /var/lib/docker/containers/
            - name: podlogs
              mountPath: /var/log/pods
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc/
        {{- end }}
{{- if .Values.global.flogoprovisioner.logging.enabled }}
      volumes:
        - name: dockercontainerlogs
          hostPath:
            path: /var/lib/docker/containers/
            type: DirectoryOrCreate
        - name: podlogs
          hostPath:
            path: /var/log/pods
            type: Directory
        - name: fluent-bit-config
          configMap:
            name: {{ include "flogoprovisioner.fullname" . }}-fluentbit-config
      {{- end }}
