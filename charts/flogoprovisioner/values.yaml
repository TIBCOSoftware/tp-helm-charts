# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

# Default values for flogoprovisioner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  cp:
    dataplaneId: dp-dp1
    instanceId: defaultinstid
    containerRegistry:
      secret: ""
      url: reldocker.tibco.com
      repository: "tibco-platform-docker-prod"
    environmentType: ""
    resources:
      serviceaccount:
        nameSpace: ""
        serviceAccountName: ""
      ingress:
        fqdn: foo.com
        ingressClassName: nginx
        ingressController: nginx
        annotations: {}

    logging:
      # The fluentbit configuration section.
      # It specifies that the fluentbit should not run as a non-root user and the user ID should be 0 (root).
      # Privilege escalation is not allowed for security reasons.
      # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
      # GitHub issue: https://github.com/fluent/fluent-bit/issues/872#issuecomment-827763207, https://github.com/kyma-project/kyma/pull/11657/files
      fluentbit:
        enabled: true
        apps:
          enabled: true
        image:
          tag: 3.1.4
        resources:
          requests:
            cpu: 10m
            memory: 15Mi
          limits:
            cpu: 50m
            memory: 30Mi
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
    # proxy configuration for the outward traffic from cp proxy
    # should have access to the proxy server and proxy server should have access to CP Subscription DNS domain
    proxy:
      # http proxy to forward the http traffic. Ex : http://proxy.example.com:8080
      httpProxy: ""
      # https proxy to forward the https traffic. Ex: https://proxy.example.com:8080
      httpsProxy: ""
      # comma separated list of domains to exclude from proxy. Ex: .example1.com,.example2.com
      noProxy: ""
  flogoprovisioner:
    serviceAccount: ""
    data:
      namespace: dp-integration-default
    image:
      registry: 664529841144.dkr.ecr.us-west-2.amazonaws.com
      tag: 452
    deploymanager:
      image:
        enabled: false
        registry: ""
        tag: ""
        resources: {}

replicaCount: 1

image:
  repository: tibco-platform/tp-flogo-provisioner
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  enabled: false
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # This section of the configuration is for the flogo Provisioner.
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  flogoprovisioner:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

service:
  type: ClusterIP
  port: 7814
  targetPort: 7814

publicApiService:
  type: ClusterIP
  port: 7816
  targetPort: 7816

ingress:
  # -- Enables configuration of ingress to expose flogo provisioner. Requires ingress support in the Kubernetes cluster.
  enabled: true
  hostsOverride: false
  className: haproxy
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: Prefix
  # -- Annotations for the ingress object. See documentation for your ingress controller for valid annotations.
  annotations:
    haproxy.org/cors-enable: "true"
    haproxy.org/load-balance: leastconn
    haproxy.org/src-ip-header: X-Real-IP
    # haproxy.org/timeout-http-request: 600s

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

probes:
  liveness:
    initialDelaySeconds: 60
    failureThreshold: 10
    periodSeconds: 10
    timeoutSeconds: 10

config:
  ARTIFACT_MANAGER_PORT: "7813"
  APP_INIT_IMAGE_TAG: "31"

publicApi:
  ingress:
    controllerName: nginx
    config:
      className: nginx
      pathPrefix: /tibco/flogo
      fqdn: ""
