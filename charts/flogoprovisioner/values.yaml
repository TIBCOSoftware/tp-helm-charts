# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

# Default values for flogoprovisioner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  cic:
    data:
      SYSTEM_WHERE: "local"
      SYSTEM_WHO: "local"
      SYSTEM_DOCKER_REGISTRY: "reldocker.tibco.com"
  cp:
    dataplaneId: dp-dp1
    instanceId: defaultinstid
    containerRegistry:
      secret: ""
      url: reldocker.tibco.com
    environmentType: ""
    resources:
      serviceaccount:
        nameSpace: ""
        serviceAccountName: ""
  flogoprovisioner:
    serviceAccount: ""
    data:
      namespace: dp-integration-default
    image:
      registry: 664529841144.dkr.ecr.us-west-2.amazonaws.com
      tag: 38-m1-ext
    deploymanager:
      image:
        enabled: false
        registry: ""
        tag: ""
        resources: {}
    logging:
      enabled: true
      image:
        registry: "cr.fluentbit.io/fluent/"
        name: "fluent-bit"
        tag: "2.1.6"
        resources: {}

replicaCount: 1

image:
  repository: tci/tci-flogoprovisioner
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  enabled: false
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7814
  targetPort: 7814

publicApiService:
  type: ClusterIP
  port: 7816
  targetPort: 7816

# ingress:
#  enabled: false
#  annotations: {}
#    # kubernetes.io/ingress.class: nginx
#    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths: []
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local

ingress:
  # -- Enables configuration of ingress to expose flogo provisioner. Requires ingress support in the Kubernetes cluster.
  enabled: true
  hostsOverride: false
  className: haproxy
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: Prefix
  # -- Annotations for the ingress object. See documentation for your ingress controller for valid annotations.
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    haproxy.org/cors-enable: "true"
    haproxy.org/load-balance: leastconn
    haproxy.org/src-ip-header: X-Real-IP
    haproxy.org/timeout-http-request: 600s

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
# resources:
#  requests:
#    cpu: 50m
#    memory: 128Mi
#  limits:
#    cpu: "2"
#    memory: 2048Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

probes:
  liveness:
    initialDelaySeconds: 60
    failureThreshold: 10
    periodSeconds: 10
    timeoutSeconds: 10

# -- Additional environment variables.
extraEnvVars: []
#  - name: NAME
#    value: value

# The name of ConfigMap containing additional environment variables.
extraEnvVarsCM: ""

# The name of Secret containing extra additional environment variables.
extraEnvVarsSecret: ""

# -- Extra volumeMounts for the integration services container.
# More info: `kubectl explain deployment.spec.template.spec.containers.volumeMounts`.
extraVolumeMounts: []
  # - name: example
  #   mountPath: /opt/tibco/example.txt
#   subPath: example.txt

# -- Extra volumes for the integration services container.
# More info: `kubectl explain deployment.spec.template.spec.volumes`.
extraVolumes: []
  # - name: example
  #   persistentVolumeClaim:
#     claimName: exampleClaim

# -- Additional init containers to add to the automationservices pod.
extraInitContainers: []
  # - name: dummy-init
  #   image: busybox
#   command: ['echo', "hey"]

config:
  #  DP_INTERNAL_URL: ""
  DP_INTERNAL_URL: "***NOT AVAILABLE***"
  ARTIFACT_MANAGER_PORT: "7813"
  APP_INIT_IMAGE_TAG: "13"

oauth2proxy:
  ingress:
    enabled: false
    className: nginx
    hosts:
      - host: ""
        paths:
          - path: /oauth2
            pathType: Prefix
            backend:
              service:
                name: oauth2-proxy
                port:
                  number: 80
      # -- Annotations for the ingress object. See documentation for your ingress controller for valid annotations.
    annotations: {}
    tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

publicApi:
  ingress:
    controllerName: nginx
    nginx:
      className: nginx
      pathPrefix: /tibco/flogo
      fqdn: ""
