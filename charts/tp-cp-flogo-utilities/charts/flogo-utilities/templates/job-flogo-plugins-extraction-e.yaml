# Copyright Â© 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
{{- if .Values.flogopluginsExtractE }}
{{- $dot := . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "flogo-utilities.fullname" $dot }}-plugins-extract-e-{{ randAlphaNum 4 | lower }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    {{- include "flogo-utilities.labels" . | nindent 4 }}
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: 3600  # Cleanup of jobs from key/value store after 100 sec
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "flogo-utilities.selectorLabels" . | nindent 8 }}
        {{- include "flogo-utilities.networkPolicyLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if (include "flogo-utilities.container-registry.secret" $dot) }}
      imagePullSecrets:
        - name: {{ include "flogo-utilities.container-registry.secret" $dot }}
      {{- end }}
      containers:
      {{- range $name, $plugin := .Values.flogopluginsE }}
      {{- range $tag := $plugin.deleteTags }}
      - name: {{ $name }}-{{ randAlphaNum 4 | lower }}-delete
        image: {{ include "flogo-utilities.image.registry" $dot }}{{"/"}}{{ include "flogo-utilities.infra.image.repository" $dot }}{{"/"}}{{ $.Values.debug.image.name }}:{{ $.Values.debug.image.tag }}
        imagePullPolicy: IfNotPresent
        {{- with $.Values.probes.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 12 }}
        {{- end }}        
        {{- if eq (include "flogo-utilities.enableResourceConstraints" $dot ) "true" }}
        resources:
        {{- toYaml $.Values.scripts.resources | nindent 12 }}
        {{- end }}        
        {{- with $.Values.securityContext }}
        securityContext:
          {{- toYaml $.Values.securityContext | nindent 10 }}
        {{- end }}
        env:
        - name: FLOGO_CONNECTOR_NAME
          value: "{{ $name }}"
        - name: FLOGO_CONNECTOR_TAG
          value: "{{ $tag }}"
        command:
          - "sh"
          - "-c"
          - |
            path={{ $.Values.volumes.plugins.mountPath }}/flogo-contribution/{{ $name }}/{{ $tag }}
            rm -rf "${path}"
            echo "Deleted flogo contribution from location: $path"
        volumeMounts:
          - name: shared-vol
            mountPath: {{ $.Values.volumes.plugins.mountPath }}
            subPath: {{ $.Values.volumes.plugins.subPath }}
          - name: tmp-vol
            mountPath: /tmp
      {{- end }}
      {{- range $tag := $plugin.tags }}
      - name: {{ $name }}-{{ randAlphaNum 4 | lower }}-extract
        image: {{ include "flogo-utilities.image.registry" $dot }}{{"/"}}{{ include "flogo-utilities.infra.image.repository" $dot }}{{"/"}}{{ $.Values.image.name }}:{{ $.Values.image.tag }}
        imagePullPolicy: IfNotPresent
        {{- with $.Values.probes.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 12 }}
        {{- end }} 
        {{- with $.Values.securityContext }}
        securityContext:
        {{- toYaml $.Values.securityContext | nindent 12 }}
        {{- end }}
        {{- if eq (include "flogo-utilities.enableResourceConstraints" $dot ) "true" }}
        resources:
        {{- toYaml $.Values.plugins.resources | nindent 12 }}
        {{- end }}
        env:
        - name: SOURCE_REGISTRY
          value: "{{ include "flogo-utilities.image.registry" $dot }}{{"/"}}{{ include "flogo-utilities.plugins.image.repository" $dot }}"
        - name: SOURCE_DOCKER_IMAGE
          value: "{{ include "flogo-utilities.image.registry" $dot }}{{"/"}}{{ include "flogo-utilities.plugins.image.repository" $dot }}{{"/"}}{{ $name }}:{{ $tag }}"
        - name: IMAGE_TEMP_DIR
          value: "/tmp/{{ $name }}-{{ $tag }}/"
        - name: SOURCE_DIRS
          value: "/opt/tibco/flogo-contribution/"
        - name: TARGET_DIRS
          value: "{{ $.Values.volumes.plugins.mountPath }}/flogo-contribution/{{ $name }}/{{ $tag }}"
        - name: LOG_LEVEL
          value: debug
        - name: FLOGO_CONNECTOR_NAME
          value: "{{ $name }}"
        - name: FLOGO_CONNECTOR_TAG
          value: "{{ $tag }}"
        {{- if (include "flogo-utilities.cp-no-proxy" $dot ) }}
        - name: NO_PROXY
          value: "{{ include "flogo-utilities.cp-no-proxy" $dot }}"
        {{- end }}
        {{- if (include "flogo-utilities.cp-http-proxy" $dot ) }}
        - name: HTTP_PROXY
          value: "{{ include "flogo-utilities.cp-http-proxy" $dot }}"
        {{- end }}
        {{- if (include "flogo-utilities.cp-https-proxy" $dot ) }}
        - name: HTTPS_PROXY
          value: "{{ include "flogo-utilities.cp-https-proxy" $dot }}"
        {{- end }}
        volumeMounts:
        - mountPath: {{ $.Values.volumes.plugins.mountPath }}
          name: shared-vol
          subPath: {{ $.Values.volumes.plugins.subPath }}
        - name: tmp-vol
          mountPath: /tmp
        - name: kaniko-vol
          mountPath: /kaniko/.docker
        # mount this secret only if private container registry is configured for CP.
        {{- if (include "flogo-utilities.container-registry.secret" $dot) }}
        - mountPath: /tibco/containerregistry
          name: container-registry-secret
        {{- end }}
      - name: {{ $name }}-{{ randAlphaNum 4 | lower }}-default
        image: {{ include "flogo-utilities.image.registry" $dot }}{{"/"}}{{ include "flogo-utilities.infra.image.repository" $dot }}{{"/"}}{{ $.Values.debug.image.name }}:{{ $.Values.debug.image.tag }}
        imagePullPolicy: IfNotPresent
        {{- with $.Values.probes.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with $.Values.securityContext }}
        securityContext:
        {{- toYaml $.Values.securityContext | nindent 12 }}
        {{- end }}
        {{- if eq (include "flogo-utilities.enableResourceConstraints" $dot ) "true" }}
        resources:
        {{- toYaml $.Values.scripts.resources | nindent 12 }}
        {{- end }}
        env:
        - name: FLOGO_CONNECTOR_NAME
          value: "{{ $name }}"
        - name: FLOGO_CONNECTOR_TAG
          value: "{{ $tag }}"
        command:
          - "sh"
          - "-c"
          - |
            tag={{ $plugin.default }}
            pluginName={{ $name }}
            echo "tag:"$tag
            echo "pluginName:"$pluginName
            echo {{ $.Values.volumes.plugins.mountPath }}
            path={{ $.Values.volumes.plugins.mountPath }}/flogo-contribution/$pluginName/default.ver
            mkdir -p "${path%/*}" && touch "$path"
            echo $tag > $path
        volumeMounts:
          - name: shared-vol
            mountPath: {{ $.Values.volumes.plugins.mountPath }}
            subPath: {{ $.Values.volumes.plugins.subPath }}
          - name: tmp-vol
            mountPath: /tmp
      {{- end }}
      {{- end }}
      volumes:
      - name: shared-vol
        persistentVolumeClaim:
          claimName: {{ include "flogo-utilities.pvc-name" $dot }}
      - emptyDir: {}
        name: tmp-vol
      - emptyDir: {}
        name: kaniko-vol
      {{- if (include "flogo-utilities.container-registry.secret" $dot) }}
      - name: container-registry-secret
        secret:
          secretName: {{ include "flogo-utilities.container-registry.secret" $dot }}
      {{- end }}
{{- end }}
