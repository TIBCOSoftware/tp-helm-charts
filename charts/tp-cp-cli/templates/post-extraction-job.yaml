#
# Copyright Â© 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

{{ if .Values.tpCLIExtract }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tpcli-utilities.fullname" . }}-post-{{ randAlphaNum 4 | lower }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    {{- include "tpcli-utilities.labels" . | nindent 4 }}
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: 3600  # Cleanup of jobs from key/value store after 100 sec
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tpcli-utilities.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: post-extractor
          image: {{ include "tpcli-utilities.image.registry" .}}{{"/"}}{{ include "tpcli-utilities.infra.image.repository" .}}{{"/"}}{{ $.Values.debug.image.name }}:{{ $.Values.debug.image.tag }}
          {{- with $.Values.securityContext }}
          securityContext:
          {{- toYaml $.Values.securityContext | nindent 12 }}
          {{- end }}
          resources:
          {{- toYaml $.Values.scripts.resources | nindent 12 }}
          command:
            - "sh"
            - "-c"
            - |
              cd /downloads/tools/tp-cli
              basePath="/downloads/tools/tp-cli/"

              # Delete old tpcli version to keep only N-2 on CP for downloads
              if [ "${DELETE_TPCLI}" = "true" ] ; then
              echo "Deleting tpcli versions..."
              if [[ "${DELETE_TPCLI_VERSIONS}" != "" ]] ; then
                echo "tpcli versions to delete :"$DELETE_TPCLI_VERSIONS
                for version in ${DELETE_TPCLI_VERSIONS//,/ }
                do
                  echo "Deleting tp-cp-cli version: $version from location: $basePath$version"
                  rm -rf "${basePath}""${version}"
                done
              else 
                echo "No tp-cp-cli version specified for deletion..."
              fi
              fi

              # Generate download json file for UI
              finalStr=""
              finalStr=$finalStr"["
              tpcliversionStr=""
              for d in */ ; do
                  tpcliversion=$(echo "$d")
                  tpcliversionStr=$tpcliversionStr"   {"
                  tpcliversionStr=$tpcliversionStr"   \"Version\": \"${tpcliversion%%/*}\","
                  tpcliversionStr=$tpcliversionStr"   \"Name\": \"TIBCO Platform CLI\","
                  tpcliversionStr=$tpcliversionStr"   \"Description\": \"Accelerate operations with the TIBCO Platform CLI, this utility will allow you to create & manage the TIBCO Platform in a scripted and repeatable way.\","
                  tpcliversionStr=$tpcliversionStr"   \"Platforms\": ["
                  platformStr=""
                  for platform in $(ls "$tpcliversion") ; do
                    installer=$(find "$tpcliversion""$platform"  -name '*.gz')
                    installer=$basePath$installer
                    arch=${platform#*-}
                    arch=$(echo $arch | tr 'a-z' 'A-Z')
                    platformStr=$platformStr"     {\"Platform\": \"${platform%%-*}\",\"Architecture\": \"${arch}\",\"DownloadFolder\": \"${installer}\" },"
                  done
                  tpcliversionStr=$tpcliversionStr${platformStr%?}
                  tpcliversionStr=$tpcliversionStr"    ],"
                  tpcliversionStr=$tpcliversionStr"\"BuildDate\":\"$(date -u -r "$installer" "+%Y-%m-%dT%H:%M:%S%Z")\""
                  tpcliversionStr=$tpcliversionStr"   },"
              done
              finalStr=$finalStr${tpcliversionStr%?}
              finalStr=$finalStr"]"

              echo $finalStr > tp_cp_cli_download.json
          env:
          - name: DELETE_TPCLI
            value: "{{ $.Values.tpcliDelete }}"
          - name: DELETE_TPCLI_VERSIONS
            value: "{{ $.Values.tpcliDeleteVersions }}"
          volumeMounts:
            - name: shared-vol
              mountPath: {{ $.Values.toolsMountPath }}
              subPath: {{ $.Values.toolsSubPath }}
      volumes:
        - name: shared-vol
          persistentVolumeClaim:
            claimName: {{ include "tpcli-utilities.pvc-name" . }}
{{- if (include "tpcli-utilities.container-registry.secret" .) }}
      imagePullSecrets:
        - name: {{ include "tpcli-utilities.container-registry.secret" . }}
{{- end }}
{{- end }}
