# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

{{- $imageRepository := .Values.backstage.image.repository | required "The repository name of the image is required (e.g. my-backstage:tag | docker.io/my-backstage:tag) !" -}}
{{- $installDir := .Values.backstage.installDir -}}
---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{ include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: backstage
    {{- include "tibcohub.platform.commonLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    egress.networking.platform.tibco.com/internet-all: enable
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: backstage
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: backstage
        egress.networking.platform.tibco.com/internet-all: enable
        {{- include "tibcohub.platform.commonLabels" . | nindent 8 }}
      annotations:
        checksum/app-config: {{ include "common.tplvalues.render" ( dict "value" .Values.backstage.appConfig "context" $) | sha256sum }}
        {{- if .Values.backstage.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "backstage.serviceAccountName" . }}
      {{- if .Values.backstage.podSecurityContext }}
      securityContext:
        {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backstage.tolerations }}
      tolerations:
        {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.tolerations "context" $) | nindent 8 }}
      {{- end }}
      volumes:
        {{- if (or .Values.backstage.extraAppConfig (and .Values.backstage.extraVolumeMounts .Values.backstage.extraVolumes)) }}
        {{- range .Values.backstage.extraAppConfig }}
        - name: {{ .configMapRef }}
          configMap:
            name: {{ .configMapRef }}
        {{- end }}
        {{- if .Values.backstage.extraVolumes }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if .Values.backstage.appConfig }}
        - name: backstage-app-config
          configMap:
            name: backstage-app-config
        {{- end }}
        {{- if .Values.enableLogging }}
        - name: podlogs
          hostPath:
            path: /var/log/pods
            type: Directory
        - name: dockercontainerlogs
          hostPath:
            path: /var/lib/docker/containers
            type: DirectoryOrCreate
        - name: config-volume
          configMap:
            name: tibco-developer-hub-fluentbit-config
  {{- end }}
      {{- if or .Values.backstage.image.pullSecrets .Values.global.cp.containerRegistry.secret }}
      imagePullSecrets:
      {{- if .Values.global.cp.containerRegistry.secret }}
        - name: {{ .Values.global.cp.containerRegistry.secret }}
      {{- end }}
      {{- if .Values.backstage.image.pullSecrets }}
      {{- range .Values.backstage.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.backstage.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: backstage-backend
          image: {{ include "backstage.image" . }}
          imagePullPolicy: {{ .Values.backstage.image.pullPolicy | quote -}}
          {{- if .Values.backstage.containerSecurityContext }}
          securityContext:
            {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.backstage.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.backstage.command "context" $) | nindent 12 }}
          {{- end }}

          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else }}
          args:
          {{- range .Values.backstage.args }}
            - {{ . | quote }}
          {{- end }}
          {{- if .Values.backstage.defaultAppConfigFiles  }}
          {{- range .Values.backstage.defaultAppConfigFiles }}
            - "--config"
            - "{{ $installDir }}/{{ . }}"
          {{- end }}{{- /* end range  */}}
          {{- end  }}{{- /* end if  */}}
          {{- if .Values.backstage.extraAppConfig }}
          {{- range .Values.backstage.extraAppConfig }}
            - "--config"
            - "{{ $installDir }}/{{ .filename }}"
          {{- end }}
          {{- end }}
          {{- if .Values.backstage.appConfig }}
            - "--config"
            - "{{ $installDir }}/app-config-from-configmap.yaml"
          {{- end }}
          {{- end }}
          {{- if .Values.backstage.resources }}
          resources: {{- include "common.tplvalues.render" (dict "value" .Values.backstage.resources "context" $) | nindent 12 }}
          {{- end }}
          {{- if or .Values.backstage.extraEnvVarsSecrets .Values.backstage.appEnvSecrets }}
          envFrom:
            {{- if .Values.backstage.extraEnvVarsSecrets }}
            - secretRef:
                name: {{ .Values.backstage.extraEnvVarsSecrets }}
            {{- end }}
            {{- if .Values.backstage.appEnvSecrets }}
            - secretRef:
                name: {{ include "backstage.appEnvSecretsName" . }}
            {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: "/tibco/hub/health"
              port: {{ .Values.backstage.containerPorts.backend }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 1
            successThreshold: 1
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: "/tibco/hub/health"
              port: {{ .Values.backstage.containerPorts.backend }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1
          env:
            - name: APP_CONFIG_backend_listen_port
              value: {{ .Values.backstage.containerPorts.backend | quote }}
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_HOST
              value: {{ include "backstage.postgresql.host" . }}
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "backstage.postgresql.databaseSecretName" . }}
                  key: {{ include "backstage.postgresql.databaseSecretKey" . }}
            {{- end }}
            {{- if .Values.backstage.extraEnvVars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: backend
              containerPort: {{ .Values.backstage.containerPorts.backend }}
              protocol: TCP
          {{- if (or .Values.backstage.extraAppConfig .Values.backstage.appConfig (and .Values.backstage.extraVolumeMounts .Values.backstage.extraVolumes)) }}
          volumeMounts:
            {{- range .Values.backstage.extraAppConfig }}
            - name: {{ .configMapRef }}
              mountPath: "{{ $installDir }}/{{ .filename }}"
              subPath: {{ .filename }}
            {{- end }}
            {{- if .Values.backstage.appConfig }}
            - name: backstage-app-config
              mountPath: "{{ $installDir }}/app-config-from-configmap.yaml"
              subPath: app-config.yaml
            {{- end }}
            {{- if .Values.backstage.extraVolumeMounts }}
              {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
          {{- end }}
        {{- if .Values.enableLogging }}
        - name: fluentbit
          image: {{ include "fluentbit.image" . }}
          imagePullPolicy: {{ .Values.fluentbit.image.pullPolicy }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: CONTAINER_NAME
              value: backstage-backend
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - name: podlogs
              mountPath: /var/log/pods
            - name: dockercontainerlogs
              mountPath: /var/lib/docker/containers
            - name: config-volume
              mountPath: /fluent-bit/etc/
        {{- end }}
        {{- if .Values.backstage.extraContainers }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.backstage.extraContainers "context" $) | nindent 8 }}
        {{- end }}
