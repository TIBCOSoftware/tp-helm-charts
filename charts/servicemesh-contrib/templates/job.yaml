apiVersion: batch/v1
kind: Job
metadata:
  name: capability-contribution-{{ .Values.capability.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.cloud.tibco.com/created-by: {{ .Values.capability.name }}
    app.kubernetes.io/name: capability-contribution-{{ .Values.capability.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600 # wait for 1 hour before deleting the pod and job
  template:
    metadata:
      labels:
        app.kubernetes.io/name: capability-contribution-{{ .Values.capability.name }}
        egress.networking.cloud.tibco.com/internet-web: enable
        egress.networking.cloud.tibco.com/cloud-web: enable
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      containers:
      - name: container-image-extractor
        image: {{ .Values.global.cic.data.SYSTEM_IMAGE_EXTRACTOR_DOCKER_IMAGE_FULL }}
        imagePullPolicy: IfNotPresent
        env:
        - name: DOCKER_REGISTRY
          value: {{ .Values.global.cic.data.SYSTEM_DOCKER_REGISTRY }}                                       # docker registry where source image is present
        - name: SOURCE_DOCKER_IMAGE
          value: {{ .Values.global.cic.data.SYSTEM_DOCKER_REGISTRY }}/{{ .Values.source.imageName }}        # source docker image name
        - name: IMAGE_TEMP_DIR
          value: "/efs/tmp-{{ .Values.capability.name }}"                                                   # temporary directory to be used by container-image-extractor for downloading and extracting docker image
        - name: SOURCE_DIRS
          value: {{ .Values.source.directory | quote }}                                                     # directory in SOURCE_DOCKER_IMAGE which needs to be copied to TARGET_DIRS
        - name: TARGET_DIRS
          value: {{ .Values.target.directory | quote }}                                                     # directory in CP EFS
        - name: LOG_LEVEL
          value: debug
{{- if eq .Values.global.cic.data.SYSTEM_WHERE "aws" }}
        - name: IS_AWS
          value: "true"                         # must be true for aws deployment
{{ end }}
        volumeMounts:
        - mountPath: /efs
          name: store-vol
          subPath: tsc/contributors
{{- if eq .Values.global.cic.data.SYSTEM_WHERE "local" }}
        - mountPath: /kaniko/ssl/certs/docker_registry_proxy.pem
          name: registry-proxy-cert
{{- end }}
      volumes:
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ .Values.global.cic.data.CP_VOLUME_CLAIM }}
{{- if eq .Values.global.cic.data.SYSTEM_WHERE "local" }}
        - name: registry-proxy-cert
          hostPath:
            path: /etc/ssl/certs/docker_registry_proxy.pem
            type: File
{{- end }}