# Copyright Â© 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

# Default values for fileserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# set to false if you want to skip deploying this chart
enabled: true

global:
  cic:
    data:
      CP_VOLUME_CLAIM: provider-cp-fs-store
      CP_DEFAULT_SA: core-cp-default

  # Where are we installing?
  # Acceptable values: local, aws, azure, or hybrid.
  where: "aws"
  # Who is doing the installation?
  # Acceptable values: local, or ldap user, or team user (staging/qa/prod).
  who: "local"

replicaCount: 1

hpa:
  cpu: 70
  memory: 70
  maxReplicas: 3
  minReplicas: 1  

volumes:
  fileserver:
    subPath: integration

image:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.27-alpine
  name: integration-nginx

nameOverride: ""

podAnnotations: {}

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  fsGroup: 101
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
      - CAP_NET_RAW

probes:
  liveness:
    initialDelaySeconds: 3
    failureThreshold: 5
    periodSeconds: 5
    timeoutSeconds: 5

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "500m"
    memory: "256Mi"

nodeSelector: {}

tolerations: []

affinity: {}

# -- Additional environment variables.
extraEnvVars: []
#  - name: NAME
#    value: value

# The name of ConfigMap containing additional environment variables.
extraEnvVarsCM: ""

# The name of Secret containing extra additional environment variables.
extraEnvVarsSecret: ""

# -- Extra volumeMounts for the integration services container.
# More info: `kubectl explain deployment.spec.template.spec.containers.volumeMounts`.
extraVolumeMounts: []
  # - name: example
  #   mountPath: /opt/tibco/example.txt
#   subPath: example.txt

# -- Extra volumes for the integration services container.
# More info: `kubectl explain deployment.spec.template.spec.volumes`.
extraVolumes: []
  # - name: example
  #   persistentVolumeClaim:
#     claimName: exampleClaim

# -- Additional init containers to add to the automationservices pod.
extraInitContainers: []
  # - name: dummy-init
  #   image: busybox
#   command: ['echo', "hey"]

isUpload: false

tibcoRouter:
  path: /files
  create: true
