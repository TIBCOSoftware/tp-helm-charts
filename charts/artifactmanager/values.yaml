#
# Copyright Â© 2023 - 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
# Default values for artifactmanager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  cic:
    data:
      SYSTEM_WHERE: "local"
      SYSTEM_WHO: "local"
      SYSTEM_DOCKER_REGISTRY: ""
  cp:
    dataplaneId: dp-dp1
    instanceId: defaultinstid
    namespace: tp-dp-dp1
    containerRegistry:
      secret: ""
      url: ""
      repository: "tibco-platform-docker-prod"
    environmentType: "vagrant"
    enableResourceConstraints: true
    resources:
      storage:
        storageClassName: ""
      persistentvolumeclaim:
        existingClaim: ""
      serviceaccount:
        nameSpace: ""
        serviceAccountName: ""
    logging:
      # The fluentbit configuration section.
      # It specifies that the fluentbit should not run as a non-root user and the user ID should be 0 (root).
      # Privilege escalation is not allowed for security reasons.
      # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
      # GitHub issue: https://github.com/fluent/fluent-bit/issues/872#issuecomment-827763207, https://github.com/kyma-project/kyma/pull/11657/files
      fluentbit:
        enabled: true
        image:
          tag: 4.0.8
        resources:
          requests:
            cpu: 10m
            memory: 15Mi
          limits:
            cpu: 50m
            memory: 30Mi

  artifactmanager:
    serviceAccount: ""
    data:
      namespace: dp-integration-default
    image:
      registry: 664529841144.dkr.ecr.us-west-2.amazonaws.com
      name: infra-artifactmanager
      tag: 107

replicaCount: 1

image:
  repository: tci/tci-artifactmanager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  enabled: false
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # This section of the configuration is for the artifact manager.
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 7813
  targetPort: 7813

# ingress:
#  enabled: false
#  annotations: {}
#    # kubernetes.io/ingress.class: nginx
#    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths: []
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local

ingress:
  # -- Enables configuration of ingress to expose artifactmanager. Requires ingress support in the Kubernetes cluster.
  enabled: true
  hostsOverride: false
  className: haproxy
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: Prefix

#  hosts:
#    - host: ""
#      paths:
#        - path: /tibco/agent/integration/artifactmanager/
#          pathType: Prefix
  # -- Annotations for the ingress object. See documentation for your ingress controller for valid annotations.
  annotations:
    ingress.kubernetes.io/path-rewrite: "/tibco/agent/integration/{{ $.Values.global.cp.instanceId }}/artifactmanager/(.*) /\\1"
    haproxy.org/cors-enable: "true"
    haproxy.org/load-balance: leastconn
    haproxy.org/src-ip-header: X-Real-IP

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 50m
    memory: 128Mi
  limits:
    cpu: "2"
    memory: 2048Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
# resources:
#  requests:
#    cpu: 50m
#    memory: 128Mi
#  limits:
#    cpu: "2"
#    memory: 2048Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

probes:
  liveness:
    initialDelaySeconds: 15
    failureThreshold: 3
    periodSeconds: 10
    timeoutSeconds: 5
  readiness:
    initialDelaySeconds: 5
    failureThreshold: 3
    periodSeconds: 3
    timeoutSeconds: 3
  startup:
    initialDelaySeconds: 20
    failureThreshold: 30
    periodSeconds: 5
    timeoutSeconds: 5

# -- Additional environment variables.
extraEnvVars: []
#  - name: NAME
#    value: value

# The name of ConfigMap containing additional environment variables.
extraEnvVarsCM: ""

# The name of Secret containing extra additional environment variables.
extraEnvVarsSecret: ""

# -- Extra volumeMounts for the integration services container.
# More info: `kubectl explain deployment.spec.template.spec.containers.volumeMounts`.
extraVolumeMounts: []
  # - name: example
  #   mountPath: /opt/tibco/example.txt
#   subPath: example.txt

# -- Extra volumes for the integration services container.
# More info: `kubectl explain deployment.spec.template.spec.volumes`.
extraVolumes: []
  # - name: example
  #   persistentVolumeClaim:
#     claimName: exampleClaim

# -- Additional init containers to add to the automationservices pod.
extraInitContainers: []
  # - name: dummy-init
  #   image: busybox
#   command: ['echo', "hey"]

config:
  #  DP_INTERNAL_URL: ""
  DP_INTERNAL_URL: "***NOT AVAILABLE***"
  EFS_ROOT: "/data"

volumes:
  artifactmanager:
    volumePath: "/data/"
    subPath: ""
    persistentVolumeClaim:
      # -- If `true`, then a `PersistentVolumeClaim` (PVC) is created.
      create: true

      # -- Specifies the name of the `StorageClass`
      # in case of Kind/miniKube use "standard"
      # in case of EKS/EBS "gp2"
      # in case of EFS ""
      storageClassName: "gp2"

      # -- Specifies the standard K8s resource requests and/or limits
      resources:
        requests:
          storage: 1Gi

      accessModes:
        - ReadWriteOnce

      volumeMode: Filesystem

      # -- Specifies the name of the persistent volume
      # If EBS/EFS if storage class given, keep volume name empty
      volumeName: ""

    # -- When `persistentVolumeClaim.create` is `false`, then use this value to define an already-existing PVC.
    existingClaim: ""

strategy:
#  rollingUpdate:
#    maxSurge: 1
#  type: RollingUpdate
  type: Recreate
