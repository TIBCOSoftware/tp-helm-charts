#
# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
{{ if .Values.global.artifactmanager.logging.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "artifactmanager.fullname" . }}-fluentbit-config
  labels:
    {{- include "artifactmanager.labels" . | nindent 4 }}
data:
  fluent-bit.conf: |
    [SERVICE]
      Flush             1
      Log_Level         info
      Daemon            off
      Parsers_File      parsers.conf

    @INCLUDE input.conf
    @INCLUDE filter.conf
    @INCLUDE output.conf

  input.conf: |
    [INPUT]
      Name              tail
      Tag               dp.${POD_NAMESPACE}.${POD_NAME}.${POD_ID}.${CONTAINER_NAME}
      Path              /var/log/pods/${POD_NAMESPACE}_${POD_NAME}_${POD_ID}/${CONTAINER_NAME}/*.log
      multiline.parser  docker, cri
      DB                /var/log/flb_kube.db
      Mem_Buf_Limit     5MB
      Skip_Long_Lines   On
      Refresh_Interval  10

  filter.conf: |
    [FILTER]
      Name              record_modifier
      Match             dp.*
      Remove_key        stream
      Remove_key        _p

    [FILTER]
      Name              parser
      Match             dp.*
      Key_Name          log
      Parser            json_decode
      Reserve_Data      True

    [FILTER]
      Name lua
      Match dp.*
      Script update_record.lua
      Call update_record

  output.conf: |
    [OUTPUT]
      Name   stdout
      Match  dp.*
      Format json

    [OUTPUT]
      Name                 opentelemetry
      Match                dp.*
      Host                 otel-services.${POD_NAMESPACE}.svc.cluster.local
      Port                 4318
      Logs_uri             /v1/logs
      Log_response_payload True
      Tls                  Off
      Tls.verify           Off

  parsers.conf: |
    [PARSER]
      Name              json_decode
      Format            regex
      Regex             ^(?<log>.*)$
      Time_Key          time
      Time_Format       %Y-%m-%dT%H:%M:%S.%L
      Time_Keep         On
      Decode_Field_As   json log
  update_record.lua: |
    -- Function to append all fields under key "msg"
    function update_record(tag, timestamp, record)
      local newLog = record["log"]
      if(newLog ~= nil and type(newLog) == "table") then
        local newMsg = newLog["msg"]
        for key, val in pairs(newLog) do
          if(key ~= "level" and key ~= "caller" and key ~= "msg" and key ~= "stacktrace" and key ~= "error" and key ~= "errorVerbose") then
            if(key ~= "time") then
              newMsg = newMsg .. ", " .. key .. ": " .. tostring(val)
            end
            newLog[key] = nil
          end
        end
        newLog["msg"] = newMsg
        record["log"] = newLog
      end
      return 2, timestamp, record
    end
{{- end -}}