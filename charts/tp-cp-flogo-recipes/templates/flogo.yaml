# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tp-cp-flogo-recipes.appName" . }}-flogo
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-flogo-recipes.labels" . | nindent 4 }}
data:
  version.json: |
    {
      "capabilityVersion": "1.2.0",
      "minCPVersion": "1.2.0",
      "maxCPVersion": "",
      "releaseDate": {{ .Values.capabilities.flogo.releaseDate | quote }},
      "releaseNotes": {{ .Values.capabilities.flogo.releaseNotes | quote }},
      "minVersionRequiredForUpgrade": "1.1.0"
    }
  package.json: |
    {
      "package": {
        "services": [
          {
            "name": "flogoprovisioner",
            "description": "Flogo Provisioner Service",
            "monitoringPriority": "essential"
          },
          {
            "name": "oauth2-proxy",
            "description": "OAuth2 Proxy",
            "monitoringPriority": "essential"
          }
        ],
        "dependsOn": [
          {
            "version": [
              1,
              2,
              0
            ],
            "capabilityId": "INTEGRATIONCORE",
            "capabilityType": "INFRA"
          },
          {
            "version": [
              1,
              2,
              0
            ],
            "capabilityId": "OAUTH2PROXY",
            "capabilityType": "INFRA_SIDECAR"
          }
        ],
        "provisioningRoles": [
          "DEV_OPS"
        ],
        "allowMultipleInstances": false,
        "capabilityResourceDependencies": [
          {
            "type": "Ingress Controller",
            "required": true,
            "resourceId": "INGRESS",
            "resourceType": "PLATFORM"
          }
        ]
      }
    }
  # Recipe copied from https://github.com/tibco/cicinfra-devops/blob/main/recipes/cp-platform-dev/DataPlane/poc/recipes/capabilities/flogo-capabilties.yaml
  recipe.yaml: |
    recipe:
      helmCharts:
        - name: flogoprovisioner
          namespace: ${NAMESPACE}
          version: "1.2.9"
          repository:
            chartMuseum:
              host: ${HELM_REPO}
          values:
            - content: |
                global:
                  flogoprovisioner:
                    image:
                      tag: 368-platform-1.2.0
                config:
                  APP_INIT_IMAGE_TAG: "29"
                publicApi:
                  ingress:
                    controllerName: ${INGRESS_CONTROLLER_NAME}
                    nginx:
                      className: ${INGRESS_CLASS_NAME}
                      pathPrefix: ${INGRESS_PATH_PREFIX}
                      fqdn: ${INGRESS_FQDN}
          flags:
            install: true
            createNamespace: false
            dependencyUpdate: true

---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tp-cp-flogo-recipes.appName" . }}-flogo-{{ randAlphaNum 4 | lower }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-flogo-recipes.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      labels:
        {{- include "tp-cp-flogo-recipes.labels" . | nindent 8 }}
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      nodeSelector:
        kubernetes.io/os: linux
      imagePullSecrets:
        {{- if (include "tp-cp-flogo-recipes.container-registry.secret" .) }}
        - name: {{ include "tp-cp-flogo-recipes.container-registry.secret" . }}
        {{- end }}
      containers:
      - name: flogo
        image: {{ include "tp-cp-flogo-recipes.image.registry" .}}{{"/"}}{{ include "tp-cp-flogo-recipes.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        env:
        - name: CAPABILITY_NAME
          value: "flogo"
        - name: RECIPE_MOUNT_LOCATION
          value: "/opt/tibco/recipe"
        - name: RECIPE_TARGET_LOCATION
          value: "/private/tsc/config/capabilities/platform"
        - name: RECIPE_RELEASE_VERSION
          value: "1.2.0"
        - name: SPACE_SEPARATED_UNSUPPORTED_RECIPE_VERSIONS
          value: ""
        - name: OVERWRITE_RECIPE
          value: {{ .Values.capabilities.flogo.overwriteRecipe | quote }}
        - name: IS_LATEST
          value: {{ .Values.capabilities.flogo.isLatest | quote }}          
        volumeMounts:
        - name: {{ include "tp-cp-flogo-recipes.appName" . }}-flogo-volume
          mountPath: /opt/tibco/recipe
        - name: scripts-config-volume
          mountPath: /opt/tibco/scripts
        - name: store-vol
          mountPath: /private/tsc/config
          subPath: tsc/config
        command: ["sh"]
        args: ["-c", "/opt/tibco/scripts/run.sh"]
      restartPolicy: Never
      volumes:
        - name: {{ include "tp-cp-flogo-recipes.appName" . }}-flogo-volume
          configMap:
            name: {{ include "tp-cp-flogo-recipes.appName" . }}-flogo
        - name: scripts-config-volume
          configMap:
            name: {{ include "tp-cp-flogo-recipes.appName" . }}-script
            defaultMode: 0777
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "tp-cp-flogo-recipes.pvc-name" . }}
