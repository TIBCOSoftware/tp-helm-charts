#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


## CONTEXT

enableWebHooks: true

# You can use topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes,
# and other user-defined topology domains. This can help to achieve high availability as well as efficient resource utilization.
# for more info: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: "kubernetes.io/hostname"
  - maxSkew: 1
    topologyKey: "topology.kubernetes.io/zone"

# Resource values for production like setup
resources:
  requests:
    cpu: 1500m
    memory: 500Mi
  limits:
    cpu: 3000m
    memory: 1000Mi

image:
  name: infra-router
  tag: 625-distroless
  pullPolicy: IfNotPresent

# no of replicas
replicaCount: "1"

# HPA rules to scale the pod. For more info: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
# Scale pods when the cpu and memory usage exceed 70% of the request.
hpa:
  cpu: 70
  mem: 70

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
# The sysctls configuration allows the router to bind to low ports (below 1024) as a non-root user.
# This is achieved by setting the 'net.ipv4.ip_unprivileged_port_start' sysctl to 0.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault
  # https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline
  sysctls:
  - name: "net.ipv4.ip_unprivileged_port_start"
    value: "0"

securityContext:
  # This section of the configuration is for the router.
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  router:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
        
global:
  tibco:
    # user provided service account.
    serviceAccount: ""
    containerRegistry:
      url: ""
      repository: "tibco-platform-docker-prod"
    # control plane instance Id. Ex: prod, stag, p01, s01. This is to identify multiple cp installation in same cluster.
    # lowercase alphanumeric string of max 5 chars
    controlPlaneInstanceId: ""

    # The fluentbit configuration section.
    # It specifies that the fluentbit should not run as a non-root user and the user ID should be 0 (root).
    # Privilege escalation is not allowed for security reasons.
    # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
    # GitHub issue: https://github.com/fluent/fluent-bit/issues/872#issuecomment-827763207, https://github.com/kyma-project/kyma/pull/11657/files
    logging:
      fluentbit:
        enabled: true
        image:
          name: "common-fluentbit"
          registry: ""
          repo: ""
          tag: 3.1.4
          pullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL

  external:
    clusterInfo:
      nodeCIDR: ""
      podCIDR: ""
    dnsDomain: ""

    # deployment target. Example: aws, azure, local.
    provider: "aws"

    ingress:
      # ingress class name. Example: alb, nginx.
      ingressClassName: ""
      # certificate arn for dns domain
      certificateArn: ""
      # reference for alb annotations https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.6/guide/ingress/annotations/
      # reference for nginx annotations https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
      annotations: {}
