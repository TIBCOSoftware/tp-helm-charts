#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


## CONTEXT

settingsConfigmap:
  - key: "LOG_LEVEL"
    value: "info"

dpMetadata:
  dpConfigureNamespaceChartName: "dp-configure-namespace"
  dpConfigureNamespaceChartVersion: "*"
  dpCoreInfrastructureChartName: "dp-core-infrastructure"
  dpCoreInfrastructureChartVersion: "*"
  components:
    services:
      - name: "tp-tibtunnel"
        description: "TibTunnel"
        monitoringPriority: "essential"
      - name: "provisioner-agent"
        description: "provisioner-agent"
        monitoringPriority: "essential"
      - name: "cpdpproxy"
        description: "HA Proxy Ingress"
        monitoringPriority: "essential"
    dependsOn: []

# You can use topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes,
# and other user-defined topology domains. This can help to achieve high availability as well as efficient resource utilization.
# for more info: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: "kubernetes.io/hostname"
  - maxSkew: 1
    topologyKey: "topology.kubernetes.io/zone"

# Resource values for production like setup
resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 1024Mi

# HPA
hpa:
  cpu: 70
  mem: 70

# images
image:
  name: infra-compute-services
  tag: 525-distroless
  pullPolicy: IfNotPresent

# no of replicas
replicaCount: "1"

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # This section of the configuration is for compute services.
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# Jfrog container registry configuration. Configuration required by compute service to create customer/subscription service-accounts in jfrog.
# Data plane container registries supported by the Control Plane.
# single control plane can support multiple container registries for dp.
# this is the list of non-default docker registries.
dpContainerRegistries:
  jfrog:
    enabled: false
    motherShipFqdn: ""
    adminUsername: ""
    adminBearerToken: "" # admin user bearer token to create to jfrog internal users, these users will be created by tibco on behalf of customers/subscription.
    email: ""
    customerGroup: "" #customer service account will be part of this group. This group should be pre-created in Jfrog (mothershipFqdn)


# Global section will apply to this chart and all of its subcharts.
global:
  tibco:
    serviceAccount: ""
    containerRegistry:
      url: ""
      repository: "tibco-platform-docker-prod"

    # control plane instance Id. Ex: prod, stag, p01, s01. This is to identify multiple cp installation in same cluster.
    # lowercase alphanumeric string of max 5 chars
    controlPlaneInstanceId: ""
    
    # The fluentbit configuration section.
    # It specifies that the fluentbit should not run as a non-root user and the user ID should be 0 (root).
    # Privilege escalation is not allowed for security reasons.
    # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
    # GitHub issue: https://github.com/fluent/fluent-bit/issues/872#issuecomment-827763207, https://github.com/kyma-project/kyma/pull/11657/files
    logging:
      fluentbit:
        enabled: true
        image:
          name: "common-fluentbit"
          registry: ""
          repo: ""
          tag: 4.0.0
          pullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 150Mi


  external:
    dnsTunnelDomain: ""
    dnsDomain: ""
