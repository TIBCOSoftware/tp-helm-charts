#
# Copyright Â© 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


{{- if .Values.global.tibco.createNetworkPolicy }}
{{/* Default network policies applied to the namespace */}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector: {} # Applies to all pods in the namespace
  policyTypes:
  - Ingress
  - Egress
  ingress: [] # Deny all ingress traffic
  egress: []  # Deny all egress traffic

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: default
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  - Ingress
  egress:
  {{- /* Enable egress to all the pods within all namespaces of same control plane instance id on all ports */}}
  {{- /* Enable egress to all the pods in the current namespace to allow pod-to-pod communication on all ports */}}
  - to:
    - namespaceSelector:
        matchLabels:
          platform.tibco.com/controlplane-instance-id: {{ include "tp-cp-bootstrap.cp-instance-id" . }}
      podSelector: {}
  {{- /* Enable egress to all the pods in a specifically labelled external namespace on all ports */}}
  - to:
    - namespaceSelector:
        matchLabels:
          networking.platform.tibco.com/non-cp-ns: enable
      podSelector: {}
  ingress:
  {{- /* Enable ingress from all the pods within all namespaces of same control plane instance id on all ports */}}
  {{- /* Enable ingress from all the pods in the current namespace to allow pod-to-pod communication on all ports */}}
  - from:
    - namespaceSelector:
        matchLabels:
          platform.tibco.com/controlplane-instance-id: {{ include "tp-cp-bootstrap.cp-instance-id" . }}
      podSelector: {}
  {{- /* Enable ingress from all the pods in a specifically labelled external namespace on all ports */}}
  - from:
    - namespaceSelector:
        matchLabels:
          networking.platform.tibco.com/non-cp-ns: enable
      podSelector: {}

---

{{/* Egress policy to access kube-dns on all pods in release namespace */}}
{{- if .Values.global.tibco.networkPolicy.kubeDns }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: kube-dns
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  {{- toYaml .Values.global.tibco.networkPolicy.kubeDns | nindent 2 }}
{{- end }}

---

{{/* Deprecated policies */}}
{{- if .Values.global.tibco.networkPolicy.createDeprecatedPolicies }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ include "tp-cp-bootstrap.cp-instance-id" . }}-cluster-all-deprecated
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      egress.networking.platform.tibco.com/cluster-all: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "tp-cp-bootstrap.cp-instance-id" . }}-cluster-access-deprecated
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      ingress.networking.platform.tibco.com/cluster-access: enable
  policyTypes:
  - Ingress
  ingress:
  - from:
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ include "tp-cp-bootstrap.cp-instance-id" . }}-internet-all-deprecated
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      egress.networking.platform.tibco.com/internet-all: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - {{ include "tp-cp-bootstrap.nodeCIDR" . }}
        - {{ include "tp-cp-bootstrap.serviceCIDR" . }}
        {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
        - {{ include "tp-cp-bootstrap.podCIDR" . }}
        {{- end }}

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ include "tp-cp-bootstrap.cp-instance-id" . }}-internet-web-deprecated
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      egress.networking.platform.tibco.com/internet-web: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - {{ include "tp-cp-bootstrap.nodeCIDR" . }}
        - {{ include "tp-cp-bootstrap.serviceCIDR" . }}
        {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
        - {{ include "tp-cp-bootstrap.podCIDR" . }}
        {{- end }}
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "tp-cp-bootstrap.cp-instance-id" . }}-internet-access-deprecated
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      ingress.networking.platform.tibco.com/internet-access: enable
  policyTypes:
  - Ingress
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - {{ include "tp-cp-bootstrap.nodeCIDR" . }}
        - {{ include "tp-cp-bootstrap.serviceCIDR" . }}
        {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
        - {{ include "tp-cp-bootstrap.podCIDR" . }}
        {{- end }}

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "tp-cp-bootstrap.cp-instance-id" . }}-kubernetes-api-deprecated
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/kubernetes-api: enable
  policyTypes:
  - Egress
  - Ingress
  egress:
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          component: kube-apiserver
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}
    {{- if and .Values.global.tibco.networkPolicy.kubeApiServer.CIDR .Values.global.tibco.networkPolicy.kubeApiServer.port }}
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.kubeApiServer.CIDR }}
    {{- end }}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: {{ .Values.global.tibco.networkPolicy.kubeApiServer.port | default 6443 }}
  ingress:
  - from: 
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          component: kube-apiserver
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}
    {{- if .Values.global.tibco.networkPolicy.kubeApiServer.CIDR }}
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.kubeApiServer.CIDR }}
    {{- end }}
{{- end }}

---

{{/* Label based policies - pods need to have this label in order to establish the communication */}}
{{/* Label based network policy to enable egress communication to cluster
for accessing node cidr on all ports */}}
{{- if .Values.global.tibco.networkPolicy.createClusterScopePolicies }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: cluster-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/cluster-egress: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cluster-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/cluster-ingress: enable
  policyTypes:
  - Ingress
  ingress:
  - from:
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}
{{- end }}

---

{{/* Label based network policy to enable egress communication to internet with exception 
for accessing node cidr on all ports */}}
{{- if .Values.global.tibco.networkPolicy.createInternetScopePolicies }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: internet-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/internet-egress: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - {{ include "tp-cp-bootstrap.nodeCIDR" . }}
        - {{ include "tp-cp-bootstrap.serviceCIDR" . }}
        {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
        - {{ include "tp-cp-bootstrap.podCIDR" . }}
        {{- end }}

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: internet-web-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/internet-web-egress: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - {{ include "tp-cp-bootstrap.nodeCIDR" . }}
        - {{ include "tp-cp-bootstrap.serviceCIDR" . }}
        {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
        - {{ include "tp-cp-bootstrap.podCIDR" . }}
        {{- end }}
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: internet-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/internet-ingress: enable
  policyTypes:
  - Ingress
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - {{ include "tp-cp-bootstrap.nodeCIDR" . }}
        - {{ include "tp-cp-bootstrap.serviceCIDR" . }}
        {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
        - {{ include "tp-cp-bootstrap.podCIDR" . }}
        {{- end }}
{{- end }}

---

{{/* Label based network policy to enable egress communication on port 443 and 6443 to kubernetes api server
and ingress communication on all ports from kubernetes api server */}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubernetes-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/kubernetes-api: enable
  policyTypes:
  - Egress
  - Ingress
  egress:
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          component: kube-apiserver
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}
    {{- if and .Values.global.tibco.networkPolicy.kubeApiServer.CIDR .Values.global.tibco.networkPolicy.kubeApiServer.port }}
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.kubeApiServer.CIDR }}
    {{- end }}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: {{ .Values.global.tibco.networkPolicy.kubeApiServer.port | default 6443 }}
  ingress:
  - from: 
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          component: kube-apiserver
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.nodeCIDR" . }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.serviceCIDR" . }}
    {{- if ne (include "tp-cp-bootstrap.nodeCIDR" . ) (include "tp-cp-bootstrap.podCIDR" . ) }}
    - ipBlock:
        cidr: {{ include "tp-cp-bootstrap.podCIDR" . }}
    {{- end }}
    {{- if .Values.global.tibco.networkPolicy.kubeApiServer.CIDR }}
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.kubeApiServer.CIDR }}
    {{- end }}

---

{{/* Label based network policy to enable egress communication to Database */}}
{{- if and .Values.global.tibco.networkPolicy.database.CIDR .Values.global.tibco.networkPolicy.database.port }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: database-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/database-egress: enable
  policyTypes:
  - Egress
  egress:
  - ports:
    - protocol: TCP
      port: {{ .Values.global.tibco.networkPolicy.database.port }}
    to:
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.database.CIDR }}
{{- end }}

---

{{/* Label based network policy to enable egress communication to Log Server */}}
{{- if and .Values.global.tibco.networkPolicy.logServer.CIDR .Values.global.tibco.networkPolicy.logServer.port }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: log-server-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/logServer-egress: enable
  policyTypes:
  - Egress
  {{- $cidr := .Values.global.tibco.networkPolicy.logServer.CIDR }}
  {{- $port := .Values.global.tibco.networkPolicy.logServer.port }}
  egress:
  - to:
    - ipBlock:
        cidr: {{ $cidr }}
    ports:
    - protocol: TCP
      port: {{ $port }}
{{- end }}

---

{{/* Label based network policy to enable egress communication to Container Registry */}}
{{- if and .Values.global.tibco.networkPolicy.containerRegistry.CIDR .Values.global.tibco.networkPolicy.containerRegistry.port }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: container-registry-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/containerRegistry-egress: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.containerRegistry.CIDR }}
    ports:
    - protocol: TCP
      port: {{ .Values.global.tibco.networkPolicy.containerRegistry.port }}
{{- end }}

---

{{/* Label based network policy to enable egress communication to Email Server */}}
{{- if and .Values.global.tibco.networkPolicy.emailServer.CIDR .Values.global.tibco.networkPolicy.emailServer.port }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: email-server-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/emailServer-egress: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.emailServer.CIDR }}
    ports:
    - protocol: TCP
      port: {{ .Values.global.tibco.networkPolicy.emailServer.port }}
{{- end }}

---

{{/* Label based network policy to enable egress communication to Proxy */}}
{{- if and .Values.global.tibco.networkPolicy.proxy.CIDR .Values.global.tibco.networkPolicy.proxy.port }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: proxy-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/proxy-egress: enable
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: {{ .Values.global.tibco.networkPolicy.proxy.CIDR }}
    ports:
    - protocol: TCP
      port: {{ .Values.global.tibco.networkPolicy.proxy.port }}
{{- end }}

---

{{/* Label based network policy to enable ingress communication from NLB to HPO */}}
{{- if and .Values.global.tibco.networkPolicy.hybridConnectivity }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: hybrid-connectivity-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tp-cp-bootstrap.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      networking.platform.tibco.com/hybrid-connectivity-ingress: enable
  policyTypes:
  - Ingress
  ingress:
  {{- toYaml .Values.networkPolicy.hybridConnectivity | nindent 2 }}
{{- end }}
{{- end }}
