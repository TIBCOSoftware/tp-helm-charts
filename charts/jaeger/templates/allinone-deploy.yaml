#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

{{ $useBadger := include "useBadger" .}}
{{ if eq $useBadger "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-allinone
  labels:
    {{- include "jaeger.allinone.labels" . | nindent 4 }}
    app.kubernetes.io/component: all-in-one
    prometheus.io/port: "14269"
    prometheus.io/scrape: "true"
spec:
  {{- if hasKey .Values.allInOne "replicas" }}
  replicas: {{ .Values.allInOne.replicas }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "jaeger.allinone.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: all-in-one
  template:
    metadata:
      labels:
        {{- include "jaeger.allinone.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: all-in-one
        app.kubernetes.io/name: "jaeger-all-in-one"
{{- if .Values.allInOne.podLabels }}
        {{- toYaml .Values.allInOne.podLabels | nindent 8 }}
{{- end }}
      annotations:
        rollId: {{ randAlphaNum 5 | quote }}
        checksum/config-env: {{ include (print $.Template.BasePath "/allinone-configmap.yaml") . | sha256sum }}
{{- if .Values.allInOne.podAnnotations }}
         {{- toYaml .Values.allInOne.podAnnotations | nindent 8 }}
{{- end }}
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        {{- toYaml .Values.allInOne.podSecurityContext | nindent 8 }}
      imagePullSecrets:
        - name: {{ .Values.global.cp.containerRegistry.secret }}
      containers:
        - env:
          {{- if .Values.allInOne.extraEnv }}
            {{- toYaml .Values.allInOne.extraEnv | nindent 12 }}
          {{- end }}
            - name: SPAN_STORAGE_TYPE
              value: {{include "allinone.storage.type" .}}
            {{- include "allinone.storage.env" . | nindent 12 }}
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: :9411
            - name: JAEGER_DISABLED
              value: "false"
            - name: COLLECTOR_OTLP_ENABLED
              value: "true"
            {{- if .Values.allInOne.samplingConfig }}
            - name: SAMPLING_STRATEGIES_FILE
              value: /etc/conf/strategies.json
            {{- end }}
        {{- with .Values.allInOne.envFrom }}
          envFrom: {{- toYaml . | nindent 12 }}
        {{- end }}
          image: {{ include "jaeger.image.registry" .}}{{"/"}}{{ include "jaeger.image.repository" .}}{{"/"}}o11y-jaeger-all-in-one:{{- .Values.collector.tag | default (include "jaeger.image.tag" .) }}
          imagePullPolicy: {{ .Values.allInOne.pullPolicy }}
          name: jaeger
          securityContext:
            {{- toYaml .Values.allInOne.securityContext | nindent 12 }}
          args:
            {{- range $arg := .Values.allInOne.args }}
            - "{{ tpl $arg $ }}"
            {{- end }}
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
            - containerPort: 16686
              protocol: TCP
            - containerPort: 16685
              protocol: TCP
            - containerPort: 9411
              protocol: TCP
            - containerPort: 4317
              protocol: TCP
            - containerPort: 4318
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 14269
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 14269
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      {{- if .Values.global.cp.enableResourceConstraints }}
      {{- with .Values.allInOne.resources }}
          resources:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- end }}
          volumeMounts:
        {{- if eq $useBadger "true" }}
            - mountPath: /mnt/data
              name: badger-data
            - mountPath: /jaeger/config
              name: jaeger-config
              readOnly: true
        {{- end }}
        {{- if .Values.allInOne.samplingConfig}}
            - name: strategies
              mountPath: /etc/conf/
        {{- end }}
        {{- range .Values.allInOne.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
        {{- end }}
      serviceAccountName: {{ .Values.global.cp.resources.serviceaccount.serviceAccountName }}
      volumes:
    {{- if eq $useBadger "true" }}
        - name: badger-data
          emptyDir:
            sizeLimit: 1Gi
        - name: jaeger-config
          configMap:
            name: o11y-service
            defaultMode: 420
    {{- end }}
    {{- if .Values.allInOne.samplingConfig}}
        - name: strategies
          configMap:
            name: {{ include "jaeger.fullname" . }}-sampling-strategies
    {{- end }}
    {{- range .Values.allInOne.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
    {{- end }}
    {{- with .Values.allInOne.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
