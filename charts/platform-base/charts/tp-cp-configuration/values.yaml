#
# Copyright Â© 2023 - 2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

global:
  external:
    dnsDomain: ""
    clusterInfo:
      nodeCIDR: ""
      serviceCIDR: ""
      podCIDR: ""
    storage:
      pvcName: "control-plane-pvc"
  tibco:
    logging:
      fluentbit:
        enabled: true
    # k8s rbac required by the service account
    containerRegistry:
      url: ""
      username: ""
      password: ""
      repository: "tibco-platform-docker-prod"  # repository
    image_name:
      cpScripts: "core-cp-scripts"
router:
  # List of cluster envs that are expected to be overwritten by cloudops. Each item in this
  # List will generate a TibcoClusterEnv CR. The fields are as follows:
  #   name = the name of the TibcoClusterEnv CR that will be generated, in the router namespace
  #   group = the group that the settings belong top
  #   setting = the name of the cluster setting
  #   value = the value to set for the given setting in the given group, as a string
  configurationEnvs:
    - name: "infra.router.log.level"
      group: "infra.router"
      setting: "LOG_LEVEL"
      value: "info"
  # Comma-separated list of domains with which TibcoClusterEnv CR of VALID_TIBCO_DOMAINS is to be created
  # e.g. For domains abc.example1.com and xyz.example2.com, the value should be set as ".example1.com, .example2.com"
  # If not set, the default will be the top level domain of the dnsDomain e.g. for dnsDomain acme.abc.example.com, the value will be ".example.com"
  # validDomains: ""

fluentbit:
  image:
    name: "common-fluentbit"
    tag: 4.0.8
    pullPolicy: IfNotPresent

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

capabilities:
  cpproxy:
    # if set to true then existing recipe will be overwritten by latest recipe.
    overwriteRecipe: "false"
    # set to true for latest version of recipe
    isLatest: "true"
    # Helm chart version for cp proxy, default is latest
    version: "1.11.2"
    tag: "272"
    # Timestamp of capability release
    releaseDate: "2024/02/22"
    # Either a link to document or the document itself specifying _what was fixed in this release.
    releaseNotes: "Enhancements, Bug fixes, etc."
  integrationcore:
    # if set to true then existing recipe will be overwritten by latest recipe.
    overwriteRecipe: "false"
    # set to true for latest version of recipe
    isLatest: "true"
    # Timestamp of capability release
    releaseDate: "2024/02/22"
    # Either a link to document or the document itself specifying _what was fixed in this release.
    releaseNotes: "Enhancements, Bug fixes, etc."
    # helm chart and image version for artifact manager, default helm chart version is latest
    artifactmanager:
      version: "1.11.1"
      tag: "135"
# tp-cp-recipes image
image:
  name: common-distroless-base-debian-debug
  tag: 12.12
  pullPolicy: IfNotPresent

# Resources
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  requests:
    cpu: 50m
    memory: 30Mi
  limits:
    cpu: 100m
    memory: 60Mi
