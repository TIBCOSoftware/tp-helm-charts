#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

global:
  tibco:
    image_name:
      cpScripts: "core-cp-scripts"
    is_replica_region: false
    check_dependencies:
      distroless_debian:
        name: "common-distroless-base-debian-debug"
        tag: 12.11
    containerRegistry:
      url: ""
      username: ""
      password: ""
      repository: "tibco-platform-docker-prod"
  external:
    environment: "production"
    admin:
      email: ""
      firstname: ""
      lastname: ""
  # Pod Security Context configuration
  # This configuration ensures that the pod is run with non-root privileges for enhanced security.
  # The user, group, and filesystem group IDs are all set to 1000.
  # The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
  # The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
  # The sysctls configuration allows the platform hybrid proxy to bind to low ports (below 1024) as a non-root user.
  # This is achieved by setting the 'net.ipv4.ip_unprivileged_port_start' sysctl to 0.
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: "Always"
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContextTpcpcoreJob:
    # It specifies that privilege escalation is not allowed for security reasons.
    # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - CAP_NET_RAW
        - ALL

checkPodDependencies:
  resources:
    requests:
      cpu: "10m"
      memory: "20Mi"
    limits:
      cpu: "30m"
      memory: "40Mi"
