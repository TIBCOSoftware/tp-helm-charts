# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

# TP iApp BW WebServer Deployment definition;
# this defines the resources for the pod, liveness and readiness probes
# along with the environment variables required by the microservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bw-webserver.consts.appName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bw-webserver.shared.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bw-webserver.shared.labels.selector" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "bw-webserver.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/internet-all: enable
        egress.networking.platform.tibco.com/cluster-all: enable
{{- if eq (include "bw-webserver.cp-logging-fluentbit-enabled" .) "true" }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/fluentbit-configmap.yaml") . | sha256sum }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: {{ include "bw-webserver.service-account-name" . }}
      {{- if $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      {{- end }}
      nodeSelector:
        kubernetes.io/os: linux
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "bw-webserver.shared.labels.standard" . | nindent 12 }}
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "bw-webserver.shared.labels.standard" . | nindent 12 }}
      terminationGracePeriodSeconds: 15
      containers:
      - name: tp-iapp-bw-server
        image: {{ include "bw-webserver.image.registry" . }}{{"/"}}{{ include "bw-webserver.bwce.image.repository" . }}{{"/"}}tp-bwce-webserver:{{ .Values.global.cic.data.BW_WEBSERVER_IMAGE_TAG }}
        imagePullPolicy: IfNotPresent
        {{- if $.Values.securityContext }}
        securityContext:
        {{- toYaml $.Values.securityContext | nindent 10 }}
        {{- end }}
        resources:
        {{- toYaml $.Values.bwwebserver.resources | nindent 10 }}
        ports:
        - containerPort: 3000
          name: server
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: "/api/v1/version"
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 1
          successThreshold: 1
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: "/api/v1/version"
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 1
        env:
        - name: TP_CP_MONITORING_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-control-plane-dnsdomain-configmap" . }}
              key: TP_CP_MONITORING_HOST
        - name: SYSTEM_WHO
          value: {{ include "bw-webserver.cp-instance-id" . }}
        - name: TSC_DNS_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-control-plane-dnsdomain-configmap" . }}
              key: TSC_DNS_DOMAIN
        - name: REGION
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-control-plane-dnsdomain-configmap" . }}
              key: REGION
        - name: TP_CP_USER_SUB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-control-plane-dnsdomain-configmap" . }}
              key: TP_CP_USER_SUB_HOST
        - name: SYSTEM_INTERNAL_COMPUTE_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-control-plane-dnsdomain-configmap" . }}
              key: SYSTEM_INTERNAL_COMPUTE_SERVICE_HOST
        - name: HTTP_REQUEST_TIMEOUT
          value: "120000"
        - name: IDLE_TIME_SECONDS
          value: "1800"
        - name: WEB_SERVER_LOG_ENABLED
          value: "true"
        - name: TSC_CONFIG_LOCATION
          value: {{ .Values.volumes.bwwebserver.mountPath }}
        # FIXME: check what it is referring to in code
        - name: ENVIRONMENT_TYPE
          value: {{ (.Values.global.external.environment | lower) }}
        - name: DEPLOYMENT_REGION
          value: {{ .Values.global.cic.data.SYSTEM_REGION }}
        volumeMounts:
          - name: store-vol
            mountPath: {{ .Values.volumes.bwwebserver.mountPath }}
            subPath: {{ .Values.volumes.bwwebserver.subPath }}
{{- if eq (include "bw-webserver.cp-logging-fluentbit-enabled" .) "true" }}
      - name: fluentbit
        image: {{ include "bw-webserver.image.registry" . }}{{"/"}}{{ include "bw-webserver.integration.image.repository" . }}{{"/"}}{{ .Values.global.fluentbit.image.name }}:{{ .Values.global.fluentbit.image.tag }}
        {{- if .Values.global.fluentbit.securityContext }}
        securityContext:
        {{- toYaml .Values.global.fluentbit.securityContext | nindent 10 }}
        {{- end }}
        resources:
        {{- toYaml .Values.fluentbit.resources | nindent 10 }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: CONTAINER_NAME
            value: tp-iapp-bw-server
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: REGION
            value: {{ .Values.global.cic.data.SYSTEM_REGION }}
{{- if .Values.global.cp }}
{{- if .Values.global.cp.logServer }}
{{- if .Values.global.cp.logServer.services }}
          - name: LOG_SERVER_USERNAME
            valueFrom:
              secretKeyRef:
                name: logserver-credentials
                key: username
          - name: LOG_SERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: logserver-credentials
                key: password
{{- end }}
{{- end }}
{{- end }}
        volumeMounts:
          - name: podlogs
            mountPath: /var/log/pods
          - name: dockercontainerlogs
            mountPath: /var/lib/docker/containers
          - name: config-volume
            mountPath: /fluent-bit/etc/
{{- end }}
      volumes:
{{- if eq (include "bw-webserver.cp-logging-fluentbit-enabled" .) "true" }}
        - name: podlogs
          hostPath:
            path: /var/log/pods
            type: Directory
        - name: dockercontainerlogs
          hostPath:
            path: /var/lib/docker/containers
            type: DirectoryOrCreate
        - name: config-volume
          configMap:
            name: {{ include "bw-webserver.consts.appName" . }}-fluentbit-config
{{- end }}
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "bw-webserver.pvc-name" . }}
{{- if (include "bw-webserver.container-registry.secret" .) }}            
      imagePullSecrets:
        - name: {{ include "bw-webserver.container-registry.secret" . }}
{{- end }}

