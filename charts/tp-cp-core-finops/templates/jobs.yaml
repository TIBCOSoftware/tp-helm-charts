#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
{{- if eq .Values.global.tibco.is_replica_region false }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tp-cp-core-finops.consts.appName" . }}-setup
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
  namespace: {{ include "tp-cp-core-finops.consts.namespace" . }}
  labels:
    {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "tp-cp-core-finops.consts.appName" . }}-setup
      labels:
        {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/cluster-all: enable
        networking.platform.tibco.com/kubernetes-api: enable
    spec:
      {{- if .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cp-core-configuration.service-account-name" . }}
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      {{- if (include "cp-core-configuration.container-registry.secret" .) }}
      imagePullSecrets:
        - name: {{ include "cp-core-configuration.container-registry.secret" . }}
      {{ end }}
      containers:
      - name: finops-setup
        {{- if .Values.global.containerSecurityContext.finopsJob }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext.finopsJob | nindent 10 }}
        {{- end }}
        image: {{ include "tp-cp-core-finops-job.image.registry" .}}{{"/"}}{{ include "tp-cp-core-finops-job.image.repository" .}}{{"/tel-finops-scripts"}}:{{ include "tp-cp-core-finops-job.generated.buildNumber" . }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: {{ .Values.global.resources.finopsJob.requests.cpu }}
            memory: {{ .Values.global.resources.finopsJob.requests.memory }}
          limits:
            cpu: {{.Values.global.resources.finopsJob.limits.cpu }}
            memory: {{ .Values.global.resources.finopsJob.limits.memory }}
        env:
        - name: DB_PREFIX
          value: {{ include "cp-core-configuration.cp-instance-id" . }}_
        - name: PGHOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBHost
        - name: PGPORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBPort
        - name: MASTER_PGDATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: REGION
              name: {{ include "tp-cp-core-finops.tp-env-configmap" . }}
        - name: IAAS_VENDOR
          value: {{ include "cp-core-configuration.provider-name" . }}
        - name: PSQL_SCRIPTS_LOCATION
          value: /opt/tibco/finops/scripts/postgres
        - name: BASE_SCRIPTS_LOCATION
          value: /opt/tibco/base/scripts
        - name: FINOPS_CONFIG_LOCATION
          value: /opt/tibco/finops/config
        - name: FINOPS_CERTIFICATES_LOCATION
          value: /opt/tibco/finops/certificates
        - name: TSC_VOLUME_LOCATION
          value: /private/finops
        - name: FINOPS_VOLUME_LOCATION
          value: /private/finops
        command: [ "/bin/bash", "-c" ]
        args:
        - "/opt/tibco/finops/scripts/init.sh install"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: store-vol
          mountPath: /private/finops
          subPath: finops
        - name: secret-volume
          mountPath: /private/finops/secret-volume
      volumes:
        - name: tmp
          emptyDir: {}
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "cp-core-configuration.pvc-name" . }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.global.external.db_secret_name }}
            items:
            - key: USERNAME
              path: USERNAME
            - key: PASSWORD
              path: PASSWORD



---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tp-cp-core-finops.consts.appName" . }}-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
  namespace: {{ include "tp-cp-core-finops.consts.namespace" . }}
  labels:
    {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "tp-cp-core-finops.consts.appName" . }}-upgrade
      labels:
        {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/cluster-all: enable
        networking.platform.tibco.com/kubernetes-api: enable
    spec:
      {{- if .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "cp-core-configuration.service-account-name" . }}
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      resources:
        requests:
          cpu: {{ .Values.global.resources.finopsJob.requests.cpu }}
          memory: {{ .Values.global.resources.finopsJob.requests.memory }}
        limits:
          cpu: {{.Values.global.resources.finopsJob.limits.cpu }}
          memory: {{ .Values.global.resources.finopsJob.limits.memory }}
      {{- if (include "cp-core-configuration.container-registry.secret" .) }}
      imagePullSecrets:
        - name: {{ include "cp-core-configuration.container-registry.secret" . }}
      {{ end }}
      containers:
      - name: finops-upgrade
        {{- if .Values.global.containerSecurityContext.finopsJob }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext.finopsJob | nindent 10 }}
        {{- end }}
        image: {{ include "tp-cp-core-finops-job.image.registry" .}}{{"/"}}{{ include "tp-cp-core-finops-job.image.repository" .}}{{"/tel-finops-scripts"}}:{{ include "tp-cp-core-finops-job.generated.buildNumber" . }}
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_PREFIX
          value: {{ include "cp-core-configuration.cp-instance-id" . }}_
        - name: PGHOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBHost
        - name: PGPORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBPort
        - name: MASTER_PGDATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: REGION
              name: {{ include "tp-cp-core-finops.tp-env-configmap" . }}
        - name: IAAS_VENDOR
          value: {{ include "cp-core-configuration.provider-name" . }}
        - name: ENVIRONMENT_TYPE
          value: {{ (.Values.global.external.environment | lower) }}
        - name: PSQL_SCRIPTS_LOCATION
          value: /opt/tibco/finops/scripts/postgres
        - name: BASE_SCRIPTS_LOCATION
          value: /opt/tibco/base/scripts
        - name: FINOPS_CONFIG_LOCATION
          value: /opt/tibco/finops/config
        - name: FINOPS_CERTIFICATES_LOCATION
          value: /opt/tibco/finops/certificates
        - name: TSC_VOLUME_LOCATION #The postgres-helper of tsc needs this variable to be set
          value: /private/finops
        - name: FINOPS_VOLUME_LOCATION
          value: /private/finops
        command: [ "/bin/bash", "-c" ]
        args:
        - "/opt/tibco/finops/scripts/init.sh upgrade"
        volumeMounts:
        - name: store-vol
          mountPath: /private/finops
          subPath: finops
        - name: secret-volume
          mountPath: /private/finops/secret-volume
      volumes:
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "cp-core-configuration.pvc-name" . }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.global.external.db_secret_name }}
            items:
            - key: USERNAME
              path: USERNAME
            - key: PASSWORD
              path: PASSWORD



---


apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tp-cp-core-finops.consts.appName" . }}-cleanup
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
  namespace: {{ include "tp-cp-core-finops.consts.namespace" . }}
  labels:
    {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "tp-cp-core-finops.consts.appName" . }}-cleanup
      labels:
        {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/cluster-all: enable
        networking.platform.tibco.com/kubernetes-api: enable
    spec:
      {{- if .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "cp-core-configuration.service-account-name" . }}
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      {{- if (include "cp-core-configuration.container-registry.secret" .) }}
      imagePullSecrets:
        - name: {{ include "cp-core-configuration.container-registry.secret" . }}
      {{ end }}
      containers:
      - name: finops-cleanup
        {{- if .Values.global.containerSecurityContext.finopsJob }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext.finopsJob | nindent 10 }}
        {{- end }}
        image: {{ include "tp-cp-core-finops-job.image.registry" .}}{{"/"}}{{ include "tp-cp-core-finops-job.image.repository" .}}{{"/tel-finops-scripts"}}:{{ include "tp-cp-core-finops-job.generated.buildNumber" . }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: {{ .Values.global.resources.finopsJob.requests.cpu }}
            memory: {{ .Values.global.resources.finopsJob.requests.memory }}
          limits:
            cpu: {{.Values.global.resources.finopsJob.limits.cpu }}
            memory: {{ .Values.global.resources.finopsJob.limits.memory }}
        env:
        - name: DB_PREFIX
          value: {{ include "cp-core-configuration.cp-instance-id" . }}_
        - name: PGHOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBHost
        - name: PGPORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBPort
        - name: MASTER_PGDATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: REGION
              name: {{ include "tp-cp-core-finops.tp-env-configmap" . }}
        - name: IAAS_VENDOR
          value: {{ include "cp-core-configuration.provider-name" . }}
        - name: DeleteDBOnUninstall
          value: {{ .Values.finops.deleteDBOnUninstall | quote }}
        - name: PSQL_SCRIPTS_LOCATION
          value: /opt/tibco/finops/scripts/postgres
        - name: BASE_SCRIPTS_LOCATION
          value: /opt/tibco/base/scripts
        - name: FINOPS_CONFIG_LOCATION
          value: /opt/tibco/finops/config
        - name: FINOPS_CERTIFICATES_LOCATION
          value: /opt/tibco/finops/certificates
        - name: TSC_VOLUME_LOCATION #The postgres-helper of tsc needs this variable to be set
          value: /private/finops
        - name: FINOPS_VOLUME_LOCATION
          value: /private/finops
        command: [ "/bin/bash", "-c" ]
        args:
        - "/opt/tibco/finops/scripts/init.sh delete"
        volumeMounts:
        - name: store-vol
          mountPath: /private/finops
          subPath: finops
        - name: secret-volume
          mountPath: /private/finops/secret-volume
        - name: tmp
          mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "cp-core-configuration.pvc-name" . }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.global.external.db_secret_name }}
            items:
            - key: USERNAME
              path: USERNAME
            - key: PASSWORD
              path: PASSWORD


---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tp-cp-core-finops.consts.appName" . }}-rollback
  annotations:
    "helm.sh/hook": pre-rollback
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
  namespace: {{ include "tp-cp-core-finops.consts.namespace" . }}
  labels:
    {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "tp-cp-core-finops.consts.appName" . }}-rollback
      labels:
        {{- include "tp-cp-core-finops.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/cluster-all: enable
        networking.platform.tibco.com/kubernetes-api: enable
    spec:
      {{- if .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "cp-core-configuration.service-account-name" . }}
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      resources:
        requests:
          cpu: {{ .Values.global.resources.finopsJob.requests.cpu }}
          memory: {{ .Values.global.resources.finopsJob.requests.memory }}
        limits:
          cpu: {{.Values.global.resources.finopsJob.limits.cpu }}
          memory: {{ .Values.global.resources.finopsJob.limits.memory }}
      {{- if (include "cp-core-configuration.container-registry.secret" .) }}
      imagePullSecrets:
        - name: {{ include "cp-core-configuration.container-registry.secret" . }}
      {{ end }}
      containers:
      - name: finops-rollback
        {{- if .Values.global.containerSecurityContext.finopsJob }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext.finopsJob | nindent 10 }}
        {{- end }}
        image: {{ include "tp-cp-core-finops-job.image.registry" .}}{{"/"}}{{ include "tp-cp-core-finops-job.image.repository" .}}{{"/tel-finops-scripts"}}:{{ include "tp-cp-core-finops-job.generated.buildNumber" . }}
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_PREFIX
          value: {{ include "cp-core-configuration.cp-instance-id" . }}_
        - name: PGHOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBHost
        - name: PGPORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBPort
        - name: MASTER_PGDATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ include "tp-cp-core-finops.consts.cp.db.configuration" . }}
              key: DBName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: REGION
              name: {{ include "tp-cp-core-finops.tp-env-configmap" . }}
        - name: IAAS_VENDOR
          value: {{ include "cp-core-configuration.provider-name" . }}
        - name: PSQL_SCRIPTS_LOCATION
          value: /opt/tibco/finops/scripts/postgres
        - name: BASE_SCRIPTS_LOCATION
          value: /opt/tibco/base/scripts
        - name: FINOPS_CONFIG_LOCATION
          value: /opt/tibco/finops/config
        - name: FINOPS_CERTIFICATES_LOCATION
          value: /opt/tibco/finops/certificates
        - name: TSC_VOLUME_LOCATION #The postgres-helper of tsc needs this variable to be set
          value: /private/finops
        - name: FINOPS_VOLUME_LOCATION
          value: /private/finops
        command: [ "/bin/bash", "-c" ]
        args:
        - "/opt/tibco/finops/scripts/init.sh rollback"
        volumeMounts:
        - name: store-vol
          mountPath: /private/finops
          subPath: finops
        - name: secret-volume
          mountPath: /private/finops/secret-volume
      volumes:
        - name: store-vol
          persistentVolumeClaim:
            claimName: {{ include "cp-core-configuration.pvc-name" . }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.global.external.db_secret_name }}
            items:
            - key: USERNAME
              path: USERNAME
            - key: PASSWORD
              path: PASSWORD
{{- end }}