#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
---
# TP CP Finops WebServer Service definition; exposes the service on targetPort 3000

apiVersion: v1
kind: Service
metadata:
  name: {{ include "finops-web-server.consts.appName" . }}
  namespace: {{ include "finops-web-server.consts.namespace" . }}
  labels:
    {{- include "finops-web-server.shared.labels.standard" . | nindent 4 }}
spec:
  ports:
  - name: server
    port: 4000
    protocol: TCP
    targetPort: 4000
  selector:
    {{- include "finops-web-server.shared.labels.selector" . | nindent 4 }}

---

# TP CP FinOps WebServer Deployment definition;
# this defines the resources for the pod, liveness and readiness probes
# along with the environment variables required by the microservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "finops-web-server.consts.appName" . }}
  namespace: {{ include "finops-web-server.consts.namespace" . }}
  labels:
    {{- include "finops-web-server.shared.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "finops-web-server.shared.labels.selector" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "finops-web-server.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/internet-web: enable
{{- if (include "cp-core-configuration.enableLogging" .) }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/fluentbit-configmap.yaml") . | sha256sum }}
{{- end }}
    spec:
      {{- if .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      {{- end }}    
      automountServiceAccountToken: false
      nodeSelector:
        kubernetes.io/os: linux
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "finops-web-server.shared.labels.standard" . | nindent 12 }}
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            {{- include "finops-web-server.shared.labels.standard" . | nindent 12 }}
      terminationGracePeriodSeconds: 15  
      {{- if (include "cp-core-configuration.container-registry.secret" .) }}
      imagePullSecrets:
        - name: {{ include "cp-core-configuration.container-registry.secret" . }}
      {{ end }}
      containers:
      - name: cpfinopswebserver
        {{- if .Values.global.containerSecurityContext.finopsWebServer }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext.finopsWebServer | nindent 10 }}
        {{- end }}        
        image: {{ include "finops-web-server.image.registry" .}}{{"/"}}{{ include "finops-web-server.image.repository" .}}{{"/tel-finops-web-server"}}:{{ include "finops-web-server.generated.buildNumber" . }}
        imagePullPolicy: IfNotPresent
        {{- if (include "tp-cp-core-finops.enableResourceConstraints" .) }}
        resources:
          requests:
            cpu: {{ .Values.finopswebserver.resources.requests.cpu }}
            memory: {{ .Values.finopswebserver.resources.requests.memory }}
          limits:
            cpu: {{ .Values.finopswebserver.resources.limits.cpu }}
            memory: {{ .Values.finopswebserver.resources.limits.memory }}
        {{- end }}
        ports:
        - containerPort: 4000
          name: server
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: "/finops-ws/api/v1/version"
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 1
          successThreshold: 1
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: "/finops-ws/api/v1/version"
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 1
        env:
        - name: TP_CP_USER_SUB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "finops-web-server.tp-finops-dnsdomains-configmap" . }}
              key: TP_CP_USER_SUBSCRIPTIONS_HOST
        - name: TP_CP_ORCHESTRATOR_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "finops-web-server.tp-finops-dnsdomains-configmap" . }}
              key: TP_CP_ORCHESTRATOR_HOST
        - name: TP_CP_FINOPS_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "finops-web-server.tp-finops-dnsdomains-configmap" . }}
              key: TP_CP_FINOPS_SERVICE_HOST
        - name: TP_CP_MONITORING_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "finops-web-server.tp-finops-dnsdomains-configmap" . }}
              key: TP_CP_MONITORING_SERVICE_HOST
        - name: SYSTEM_WHO
          value: {{ include "cp-core-configuration.cp-instance-id" . }}
        - name: HTTP_REQUEST_TIMEOUT
          value: "120000"
        - name: IDLE_TIME_SECONDS
          value: "1800"
        - name: WEB_SERVER_LOG_ENABLED
          value: "true"
        - name: REDIRECTION_TIME
          value: "5"
        volumeMounts:
        - name: logs
          mountPath: /tmp/logs
{{- if (include "cp-core-configuration.enableLogging" .) }}
      - name: fluentbit
        image: {{ include "finops-web-server.image.registry" .}}{{"/"}}{{ include "finops-web-server.image.repository" .}}{{"/"}}{{ .Values.global.tibco.logging.fluentbit.image.name }}:{{ .Values.global.tibco.logging.fluentbit.image.tag }}
        {{- if .Values.global.containerSecurityContext.finopsWebServer }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext.finopsWebServer | nindent 10 }}
        {{- end }}
        {{- if (include "tp-cp-core-finops.enableResourceConstraints" .) }}
        resources:
          requests:
            cpu: {{ .Values.fluentbit.resources.requests.cpu }}
            memory: {{ .Values.fluentbit.resources.requests.memory }}
          limits:
            cpu: {{ .Values.fluentbit.resources.limits.cpu }}
            memory: {{ .Values.fluentbit.resources.limits.memory }}
        {{- end }}
        ports:
        - containerPort: 2020
          protocol: TCP
        startupProbe:
          httpGet:
            scheme: HTTP
            path: /api/v1/health
            port: 2020
          initialDelaySeconds: 0
          periodSeconds: 1
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 50
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /api/v1/health
            port: 2020
          periodSeconds: 10
          timeoutSeconds: 2
          initialDelaySeconds: 0
          successThreshold: 1
          failureThreshold: 1
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /api/v1/health
            port: 2020
          periodSeconds: 10
          timeoutSeconds: 2
          initialDelaySeconds: 0
          successThreshold: 1
          failureThreshold: 1
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: CONTAINER_NAME
            value: cpfinopswebserver
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        volumeMounts:
          - name: logs
            mountPath: /var/log/pods
          - name: db
            mountPath: /var/log/db
          - name: config-volume
            mountPath: /fluent-bit/etc/
{{- end }}
      volumes:
        - name: logs
          emptyDir: {}
{{- if (include "cp-core-configuration.enableLogging" .) }}
        - name: db
          emptyDir: {}
        - name: config-volume
          configMap:
            name: {{ include "finops-web-server.consts.appName" . }}-fluentbit-config
{{- end }}

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "finops-web-server.consts.appName" . }}
  namespace: {{ include "finops-web-server.consts.namespace" . }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "finops-web-server.consts.appName" . }}
  minReplicas: {{ .Values.replicaCount }}
  maxReplicas: {{ add 2 .Values.replicaCount }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.hpa.cpu }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.hpa.memory }}

---

# TIBCO Route definition; this is where you define your microservice endpoints

apiVersion: cloud.tibco.com/v1
kind: TibcoRoute
metadata:
  name: {{ include "finops-web-server.consts.appName" . }}
  namespace: {{ include "finops-web-server.consts.namespace" . }}
  labels:
    {{- include "finops-web-server.shared.labels.standard" . | nindent 4 }}
spec:
  serviceName: {{ include "finops-web-server.consts.appName" . }}
  env:
  - name: CONTROL_PLANE_HOME_URL
    valueFrom:
      configMapKeyRef:
        key: TSC_DNS_DOMAIN
        name: {{ include "finops-web-server.tp-control-plane-dnsdomains" . }}
  endpoints:
  - path: /cp/finops/ws
    internalPath: /finops-ws
    port: 4000
    protocol: http
    proxies:
    - listener: virtual
      config: secure
      fqdn: ${CONTROL_PLANE_HOME_URL}
      allowClientCache: true
      allowXFrameOptions: false
      enableRedirects: true
  - path: /cp/monitoring/monitoring-web-ui-content
    internalPath: /monitoring-web-ui-content
    port: 4000
    protocol: http
    proxies:
    - listener: virtual
      config: secure
      fqdn: "${CONTROL_PLANE_HOME_URL}"
      methods:
      - GET
      configVariables:
        SECURE_REDIRECT_SKIP_ACCTS_CHECK: "true"
        SECURE_REDIRECT_SKIP_EULA_CHECK: "true"
        SECURE_REDIRECT_SKIP_ORG_CHECK: "true"
      enableRedirects: true
      allowClientCache: true
      allowXFrameOptions: false
  - path: /cp/finops/finops-web-ui-content
    internalPath: /finops-web-ui-content
    port: 4000
    protocol: http
    proxies:
    - listener: virtual
      config: secure
      fqdn: "${CONTROL_PLANE_HOME_URL}"
      methods:
      - GET
      configVariables:
        SECURE_REDIRECT_SKIP_ACCTS_CHECK: "true"
        SECURE_REDIRECT_SKIP_EULA_CHECK: "true"
        SECURE_REDIRECT_SKIP_ORG_CHECK: "true"
      enableRedirects: true
      allowClientCache: true
      allowXFrameOptions: false
