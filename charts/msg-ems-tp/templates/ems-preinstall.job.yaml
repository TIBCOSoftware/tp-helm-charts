#
# Copyright (c) 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

# Check for needed default credentials (like TLS support)
#
{{-  $emsParams := include "need.msg.ems.params" . | fromYaml -}}
{{- $dataPvc := $emsParams.ems.logs.storageName -}}
{{- $jobname := printf "%s-preinstall" $emsParams.ems.name -}}
{{- $svcEms := printf "%s-%s" $emsParams.ems.name "ems" -}}
{{- $svcFtl := printf "%s-%s" $emsParams.ems.name "ftl" -}}
{{- $svcFtlHost := printf "%s.%s.svc" $svcFtl .Release.Namespace -}}
# Additional HELPER VARIABLE DEFINITIONS
#
apiVersion: batch/v1
kind: Job
metadata:
    name: "{{ $jobname }}"
    labels:
      name: "{{ $jobname }}"
      {{ include "msg.dp.labels" . | indent 6 }}
      tib-dp-app: msg-ems-ftl
    namespace: "{{ .Release.Namespace }}"
    annotations:
      # "helm.sh/hook": pre-install,pre-upgrade
      "helm.sh/hook": pre-install
      "helm.sh/hook-weight": "5"
      # "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
    backoffLimit: 0
    #4hr limit -  activeDeadlineSeconds: 14400
    ttlSecondsAfterFinished: 180
    template:
        metadata:
            name: "{{ $jobname }}"
            namespace: "{{ .Release.Namespace }}"
            labels:
                name: "{{ $jobname }}"
                tib-dp-app: msg-ems-ftl
                {{ include "msg.dp.labels" . | indent 16 }}
                {{ include "msg.dp.net.kubectl" . | indent 16}}
        spec:
            enableServiceLinks: false
            nodeSelector:
                kubernetes.io/os: linux
            {{- if ne "none" $emsParams.dp.pullSecret }}
            imagePullSecrets:
            - name: {{ $emsParams.dp.pullSecret }}
            {{- end }}
            serviceAccountName: "{{ $emsParams.dp.serviceAccount }}"
            restartPolicy: Never
            # volumes:
            # - name: scripts-vol
            #   configMap:
            #     name: "{{ $emsParams.ems.name }}-scripts"
            # - name: "ems-log"
            #   {{ if eq "sharedPvc" $emsParams.ems.logs.storageType }}
            #   persistentVolumeClaim:
            #     claimName: "{{ $emsParams.ems.logs.storageName }}"
            #   {{ else }}
            #   emptyDir: {}
            #   {{ end }}
            terminationGracePeriodSeconds: 10
            containers:
            -   name: "main"
                command: ['/compliance/check_eua', 'bash', '-c' ]
                args:
                - >
                  echo "Doing pre-install checks ... " ; 
                image: "{{ $emsParams.ems.image }}"
                imagePullPolicy: "{{ $emsParams.dp.pullPolicy }}"
                # volumeMounts:
                # - mountPath: /boot
                #   name: scripts-vol
                # - mountPath: /logs
                #   name: "ems-log"
                #   {{ if eq "sharedPvc" $emsParams.ems.logs.storageType }}
                #   subPathExpr: "$(MY_RELEASE)/logs"
                #   {{ end }}
                env:
                # CAUTION! Setting Names here overrides envFrom values
                {{ include "msg.envStdPodRefs" . | indent  16 }}
                - name: ACCEPT_EUA
                  value: "y"
                - name: MY_RELEASE
                  value: "{{ .Release.Name }}"
                - name: FTL_SERVICE
                  value: "{{ $emsParams.ems.name }}-ftl"
                - name: EMS_SERVICE
                  value: "{{ $emsParams.ems.name }}-ems"
                - name: REALM_PORT
                  value: "{{ $emsParams.ems.ports.realmPort }}"
                - name: EMS_TCP_PORT
                  value: "{{ $emsParams.ems.ports.tcpPort }}"
                - name: EMS_INIT_JSON
                  value: "/logs/$(MY_POD_NAME)/boot/tibemsd-ftl.json"
                - name: EMS_HTTP_PORT
                  value: "{{ $emsParams.ems.ports.httpPort }}"
                - name: FTL_REALM_URL
                  # the service load-balanced REALM URL
                  value: "http://{{ $svcFtlHost }}:$(REALM_PORT)"
