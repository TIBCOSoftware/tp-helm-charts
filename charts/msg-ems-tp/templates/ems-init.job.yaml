{{- if .Release.IsInstall }}
#
# Copyright (c) 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained 
# in the license file that is distributed with this file.  
#

# FOR NEW INSTALLS: load an initial tibemsd-ftl.json

#
{{-  $emsParams := include "need.msg.ems.params" . | fromYaml -}}
{{- $dataPvc := $emsParams.ems.logs.storageName -}}
{{- $stsname := printf "%s-ems" $emsParams.ems.name -}}
{{- $svcEms := printf "%s-%s" $emsParams.ems.name "ems" -}}
{{- $svcFtl := printf "%s-%s" $emsParams.ems.name "ftl" -}}
{{- $svcFtlHost := printf "%s.%s.svc" $svcFtl .Release.Namespace -}}
# Additional HELPER VARIABLE DEFINITIONS
#
apiVersion: batch/v1
kind: Job
metadata:
    name: "{{ $emsParams.ems.name }}-emsinit"
    labels:
      name: "{{ $emsParams.ems.name }}-emsinit"
      {{ include "msg.dp.labels" . | indent 6 }}
      tib-dp-app: msg-ems-ftl
    namespace: "{{ .Release.Namespace }}"
    annotations:
      rollme: {{ randAlphaNum 5 | quote }}
spec:
    backoffLimit: 0
    #4hr limit -  activeDeadlineSeconds: 14400
    ttlSecondsAfterFinished: 180
    template:
        metadata:
            name: "{{ $emsParams.ems.name }}-emsinit"
            namespace: "{{ .Release.Namespace }}"
            labels:
                name: "{{ $emsParams.ems.name }}-emsinit"
                tib-dp-app: msg-ems-ftl
                {{ include "msg.dp.labels" . | indent 16 }}
                {{ include "msg.dp.net.kubectl" . | indent 16}}
            annotations:
                rollme: {{ randAlphaNum 5 | quote }}
        spec:
            enableServiceLinks: false
            nodeSelector:
                kubernetes.io/os: linux
            {{- if ne "none" $emsParams.dp.pullSecret }}
            imagePullSecrets:
            - name: {{ $emsParams.dp.pullSecret }}
            {{- end }}
            serviceAccountName: "{{ $emsParams.dp.serviceAccount }}"
            restartPolicy: Never
            volumes:
            - name: scripts-vol
              configMap:
                name: "{{ $emsParams.ems.name }}-scripts"
            - name: "ems-log"
              {{ if eq "sharedPvc" $emsParams.ems.logs.storageType }}
              persistentVolumeClaim:
                claimName: "{{ $emsParams.ems.logs.storageName }}"
              {{ else }}
              emptyDir: {}
              {{ end }}
            terminationGracePeriodSeconds: 10
            containers:
            -   name: "main"
                command: ['/compliance/check_eua', 'bash', '-c' ]
                args:
                - >
                  ( mkdir -p /logs/$MY_POD_NAME/boot ; cd /logs/$MY_POD_NAME/boot ;
                      for x in /boot/mk-*.sh ; do bash < $x ; done | tee boot.out ) ;
                  bash < /boot/load-ems-init-json.sh ; 
                image: "{{ $emsParams.ems.image }}"
                imagePullPolicy: "{{ $emsParams.dp.pullPolicy }}"
                volumeMounts:
                - mountPath: /boot
                  name: scripts-vol
                - mountPath: /logs
                  name: "ems-log"
                  {{ if eq "sharedPvc" $emsParams.ems.logs.storageType }}
                  subPathExpr: "$(MY_RELEASE)/logs"
                  {{ end }}
                env:
                # CAUTION! Setting Names here overrides envFrom values
                {{ include "msg.envStdPodRefs" . | indent  16 }}
                - name: ACCEPT_EUA
                  value: "y"
                - name: MY_RELEASE
                  value: "{{ .Release.Name }}"
                - name: FTL_SERVICE
                  value: "{{ $emsParams.ems.name }}-ftl"
                - name: EMS_SERVICE
                  value: "{{ $emsParams.ems.name }}-ems"
                - name: REALM_PORT
                  value: "{{ $emsParams.ems.ports.realmPort }}"
                - name: EMS_TCP_PORT
                  value: "{{ $emsParams.ems.ports.tcpPort }}"
                - name: EMS_INIT_JSON
                  value: "/logs/$(MY_POD_NAME)/boot/tibemsd-ftl.json"
                - name: EMS_HTTP_PORT
                  value: "{{ $emsParams.ems.ports.httpPort }}"
                - name: FTL_REALM_URL
                  # the service load-balanced REALM URL
                  value: "http://{{ $svcFtlHost }}:$(REALM_PORT)"

{{- end }}
