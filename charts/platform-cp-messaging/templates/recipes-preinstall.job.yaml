#
# Copyright (c) 2023-2025. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#
{{-  $recipesParams := include "need.msg.recipes.params" . | fromYaml -}}
{{- $jobname := printf "%s-preinstall-%s" .Release.Name (randAlphaNum 4 | lower) }}
apiVersion: batch/v1
kind: Job
metadata:
    name: "{{ $jobname }}"
    labels:
      name: "{{ $jobname }}"
      app.kubernetes.io/name: msg-recipes-preinstall
      app.kubernetes.io/component: msg 
    namespace: "{{ .Release.Namespace }}"
    annotations:
      "helm.sh/hook": pre-install,pre-upgrade
      "helm.sh/hook-weight": "5"
spec:
    backoffLimit: 0
    #4hr limit -  activeDeadlineSeconds: 14400
    #72hr limit -  activeDeadlineSeconds: 259200
    ttlSecondsAfterFinished: 7200
    template:
        metadata:
          name: "{{ $jobname }}"
          namespace: "{{ .Release.Namespace }}"
          labels:
            name: "{{ $jobname }}"
            app.kubernetes.io/name: msg-recipes-preinstall
            app.kubernetes.io/component: msg
            networking.platform.tibco.com/kubernetes-api: enable
        spec:
            enableServiceLinks: false
            nodeSelector:
                kubernetes.io/os: linux
            {{- if $recipesParams.cp.pullSecret }}
            imagePullSecrets:
            - name: {{ $recipesParams.cp.pullSecret }}
            {{- end }}
            serviceAccountName: "{{ $recipesParams.cp.serviceAccount }}"
            restartPolicy: Never
            volumes:
            - name: efs-vol
              persistentVolumeClaim:
                claimName: "{{ $recipesParams.cp.CP_VOLUME_CLAIM }}"
            {{ include "msg.cp.security.pod" $recipesParams | nindent 12 }}
            terminationGracePeriodSeconds: 10
            containers:
            -   name: "msg-cp-efs"
                command: ['bash', '-c']
                args:
                - | 
                    # Cleanup old hook jobs
                    echo "Cleaning up old hook jobs"
                    kubectl get jobs -l=app.kubernetes.io/name=msg-recipes-preinstall | egrep "Complet|Fail" | while read x o ; do
                      echo "Deleting job $x"
                      kubectl delete job $x
                    done
                    writeable=true
                    if [ -d "{{ $recipesParams.recipes.TARGET_PATH }}" ]; then
                      if [ -d "{{ $recipesParams.recipes.TARGET_PATH }}/ems" ] && [ ! -w "{{ $recipesParams.recipes.TARGET_PATH }}/ems" ]; then
                        echo "Target path {{ $recipesParams.recipes.TARGET_PATH }}/ems is not writeable"
                        stat {{ $recipesParams.recipes.TARGET_PATH }}/ems
                        writeable=false
                      else
                        echo "Target path {{ $recipesParams.recipes.TARGET_PATH }}/ems is writeable"
                      fi
                      if [ -d "{{ $recipesParams.recipes.TARGET_PATH }}/pulsar" ] && [ ! -w "{{ $recipesParams.recipes.TARGET_PATH }}/pulsar" ]; then
                        echo "Target path {{ $recipesParams.recipes.TARGET_PATH }}/pulsar is not writeable"
                        stat {{ $recipesParams.recipes.TARGET_PATH }}/pulsar
                        writeable=false
                      else
                        echo "Target path {{ $recipesParams.recipes.TARGET_PATH }}/pulsar is writeable"
                      fi
                    else
                        echo "Target path does not yet exist. No permissions to check."
                    fi
                    if [ "$writeable" = false ]; then
                        if ! kubectl auth can-i create job; then
                            echo "Service account does not have permission to create job"
                        else
                        uid=$(id -u)
                        gid=$(id -g)
                        echo "Current user id: $uid, group id: $gid"
                        permissionsJobName="tp-cp-msg-recipes-permissions-job-{{ randAlphaNum 4 | lower }}"
                    kubectl apply -f - <<EOF || true
                    apiVersion: batch/v1
                    kind: Job
                    metadata:
                        name: "$permissionsJobName"
                        namespace: "{{ .Release.Namespace }}"
                    spec:
                        backoffLimit: 0
                        #4hr limit -  activeDeadlineSeconds: 14400
                        ttlSecondsAfterFinished: 300
                        template:
                            metadata:
                                name: "$permissionsJobName"
                                namespace: "{{ .Release.Namespace }}"
                            spec:
                                nodeSelector:
                                    kubernetes.io/os: linux
                                {{- if $recipesParams.cp.pullSecret }}
                                imagePullSecrets:
                                - name: {{ $recipesParams.cp.pullSecret }}
                                {{- end }}
                                serviceAccountName: "{{ $recipesParams.cp.serviceAccount }}"
                                restartPolicy: Never
                                terminationGracePeriodSeconds: 10
                                containers:
                                - name: msg-cp-permissions
                                  image: {{ $recipesParams.cp.imageFullName }}
                                  command: ['bash', '-c'] 
                                  args:
                                  - |
                                    for dir in "pulsar" "ems" "pulsar.old" "ems.old" "../infra/msgcore" ; do
                                        dirpath="{{ $recipesParams.recipes.TARGET_PATH }}/\$dir"
                                        if [ -d "{{ $recipesParams.recipes.TARGET_PATH }}/\$dir" ]; then
                                            echo "Changing ownership of \$dirpath to $uid:$gid"
                                            chown -R $uid:$gid "\$dirpath"
                                            stat "\$dirpath"
                                        fi
                                    done

                                  volumeMounts:
                                  - mountPath: /private/tsc
                                    name: efs-vol
                                    subPath: tsc
                                volumes:
                                - name: efs-vol
                                  persistentVolumeClaim:
                                    claimName: {{ $recipesParams.cp.CP_VOLUME_CLAIM }}
                    EOF
                        fi
                    fi

                image: "{{ $recipesParams.cp.imageFullName }}"
                imagePullPolicy: {{ $recipesParams.cp.pullPolicy }}
                {{ include "msg.cp.security.container" $recipesParams | nindent 16 }}
                {{- if $recipesParams.cp.enableResourceConstraints }}
                {{- with .Values.resources }}
                resources:
                  {{- toYaml . | nindent 18}}
                {{- end }}
                {{- end }}
                volumeMounts:
                - mountPath: /private/tsc
                  name: efs-vol
                  subPath: tsc
                env:
                - name: TARGET_PATH
                  value: "{{ $recipesParams.recipes.TARGET_PATH }}"
                - name: ROLLME
                  # REQUIRE NEW JOB TO START
                  value: {{ randAlphaNum 5 | quote }}
