# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tibcodistributedlocks.cloud.tibco.com
  labels:
    app.kubernetes.io/name: compute-crds
    app.kubernetes.io/component: compute
    app.kubernetes.io/part-of: cic-compute
    app.kubernetes.io/managed-by: Helm
    app.cloud.tibco.com/created-by: cic-compute
spec:
  group: cloud.tibco.com
  names:
    categories:
      - all
      - tibco-cloud
      - tibco
    kind: TibcoDistributedLock
    listKind: TibcoDistributedLockList
    plural: tibcodistributedlocks
    shortNames:
      - tibdlock
    singular: tibcodistributedlock
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Whether lock is acquired or not
          jsonPath: .status.isLocked
          name: IsLocked
          type: boolean
        - description: The owner of lock
          jsonPath: .status.lockedBy
          name: LockedBy
          type: string
        - description: The value attached to lock
          jsonPath: .spec.value
          name: Value
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: TibcoDistributedLock is the Schema for the tibcodistributedlocks
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TibcoDistributedLockSpec defines the desired state of TibcoDistributedLock
              properties:
                lock:
                  description: Lock whether locked or not
                  type: boolean
                lockTimestamp:
                  description: LockTimestamp is a timestamp when lock was acquired/renewed
                  format: int64
                  type: integer
                requestor:
                  description: Requestor represents the lock requestor. It should be
                    an uniqueId which can be computed from pod-name
                  type: string
                value:
                  description: Value attached to the lock
                  type: string
              required:
                - lock
                - requestor
                - value
              type: object
            status:
              description: TibcoDistributedLockStatus defines the observed state of
                TibcoDistributedLock
              properties:
                isLocked:
                  description: IsLocked whether lock is acquired or not
                  type: boolean
                lockExpiration:
                  description: LockExpiration is lock expiry timestamp
                  format: int64
                  type: integer
                lockedBy:
                  description: LockedBy represents owner of lock, matches TibcoDistributedLockSpec.Requestor
                  type: string
                observedGeneration:
                  description: ObservedGeneration observed generation of CR
                  format: int64
                  type: integer
              required:
                - isLocked
                - observedGeneration
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
