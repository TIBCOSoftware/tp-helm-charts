#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


apiVersion: apps/v1
kind: Deployment
metadata:
  name: tp-tibtunnel
  labels:
    {{- include "tp-tibtunnel.shared.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "tp-tibtunnel.shared.labels.selector" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tp-tibtunnel.shared.labels.standard" . | nindent 8 }}
        egress.networking.platform.tibco.com/internet-web: enable
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: tibtunnel
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        {{- /* Converting the command from "" to ["",""]. Split input command by space and coverting it into array of string */}}
        {{- /* @input: "tp-tibtunnel connect --remote-debug -s localhost:80 connecturl" */}}
        {{- /* @output: ["tp-tibtunnel", "connect", "--remote-debug","-s","localhost:80","connecturl"] */}}
        env:
          - name: HTTP_PROXY
            valueFrom:
            configMapKeyRef:
              name: proxy-config
              key: HTTP_PROXY
              optional: true
          - name: HTTPS_PROXY
            valueFrom:
            configMapKeyRef:
              name: proxy-config
              key: HTTPS_PROXY
              optional: true
          - name: NO_PROXY
            valueFrom:
            configMapKeyRef:
              name: proxy-config
              key: NO_PROXY
              optional: true
        command: [{{- range $v := (mustRegexSplit " +" (include "tp-tibtunnel.helpers.command.connect" .) -1) -}}"{{- $v -}}",{{- end -}}]
        {{- if .Values.securityContext.tibtunnel }}
        securityContext:
          {{- toYaml .Values.securityContext.tibtunnel | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10}}
        {{- end }}
        volumeMounts:
        - name: config-dir
          mountPath: /etc/config
{{- if .Values.global.logging.fluentbit.enabled }}
      - name: fluentbit
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}fluentbit:{{ .Values.fluentbit.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.global.logging.fluentbit.securityContext }}
        securityContext:
          {{- toYaml .Values.global.logging.fluentbit.securityContext | nindent 10 }}
        {{- end }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: CONTAINER_NAME
            value: tibtunnel
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        {{- with .Values.fluentbit.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: podlogs
            mountPath: /var/log/pods
          - name: config-volume
            mountPath: /fluent-bit/etc/
{{- end }}
      initContainers:
      - name: tibtunnel-init
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        command: [{{- range $v := (mustRegexSplit " +" (include "tp-tibtunnel.helpers.command.configure" .) -1) -}}"{{- $v -}}",{{- end -}}]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext.tibtunnel }}
        securityContext:
          {{- toYaml .Values.securityContext.tibtunnel | nindent 10 }}
        {{- end }}
        env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: ACCESS_KEY
                name: {{ include "tp-tibtunnel.consts.appName" .}}
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
          limits:
            cpu: 30m
            memory: 40Mi
        volumeMounts:
        - name: config-dir
          mountPath: /etc/config
      {{ if .Values.provisionerAgentProbe.enable -}}
      - name: provisioner-agent-probe
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        command: ["tp-tibtunnel","probe","--http","{{ tpl .Values.provisionerAgentProbe.url . }}","--interval","{{ .Values.provisionerAgentProbe.interval }}","--retries","{{.Values.provisionerAgentProbe.retries}}"]
        {{- if .Values.securityContext.tibtunnel }}
        securityContext:
          {{- toYaml .Values.securityContext.tibtunnel | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
          limits:
            cpu: 50m
            memory: 40Mi
      {{- end }}
      imagePullSecrets:
        {{- if .Values.global.tibco.containerRegistry.username }}{{if .Values.global.tibco.containerRegistry.password }}
        - name: {{ .Values.global.tibco.dataPlaneId }} {{/* optional imagePullSecret for private repo. no op if secret does not exist */}}
        {{- end }}{{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-dir
          emptyDir: {}
{{- if .Values.global.logging.fluentbit.enabled }}
        - name: podlogs
          hostPath:
            path: /var/log/pods
            type: Directory
        - name: config-volume
          configMap:
            name: tp-tibtunnel-fluentbit-config
{{- end }}
