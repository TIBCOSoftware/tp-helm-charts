#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


apiVersion: apps/v1
kind: Deployment
metadata:
  name: tp-tibtunnel
  labels:
    {{- include "tp-tibtunnel.shared.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "tp-tibtunnel.shared.labels.selector" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tp-tibtunnel.shared.labels.standard" . | nindent 8 }}
        networking.platform.tibco.com/internet-web-egress: enable
        networking.platform.tibco.com/cp-egress: enable
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: tibtunnel
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        {{- /* Converting the command from "" to ["",""]. Split input command by space and coverting it into array of string */}}
        {{- /* @input: "tp-tibtunnel connect --remote-debug -s localhost:80 connecturl" */}}
        {{- /* @output: ["tp-tibtunnel", "connect", "--remote-debug","-s","localhost:80","connecturl"] */}}
        command: [{{- range $v := (mustRegexSplit " +" (include "tp-tibtunnel.helpers.command.connect" .) -1) -}}"{{- $v -}}",{{- end -}}]
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.global.tibco.enableResourceConstraints }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10}}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: 3127
          name: healthz
        startupProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 3127
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 3127
          failureThreshold: 1
          successThreshold: 1
          timeoutSeconds: 5
          initialDelaySeconds: 1
          periodSeconds: 10
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 3127
          failureThreshold: 1
          successThreshold: 1
          timeoutSeconds: 5
          initialDelaySeconds: 1
          periodSeconds: 10
        env:
        - name: USE_FILE_LOGGING
          value: "true"
        {{- with .Values.global.proxy }}
        {{- if .httpProxy }}
        - name: http_proxy
          value: {{ .httpProxy }}
        {{- end }}
        {{- if .httpsProxy }}
        - name: https_proxy
          value: {{ .httpsProxy }}
        {{- end }}
        {{- if .noProxy }}
        - name: no_proxy
          value: {{ .noProxy | quote }}
        {{- end }}          
        {{- end }}
        volumeMounts:
      {{- if .Values.global.tibco.cpCertificateSecret }}
        - name: cp-certs
          mountPath: /etc/ssl/certs/
      {{- end }}
        - name: config-dir
          mountPath: /etc/config
        - name: logs
          mountPath: /tmp/logs
{{- if .Values.global.logging.fluentbit.enabled }}
      - name: fluentbit
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.fluentbit.image.name }}:{{ .Values.fluentbit.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: CONTAINER_NAME
            value: tibtunnel
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        {{- if .Values.global.tibco.enableResourceConstraints }}
        {{- with .Values.fluentbit.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: 2020
          protocol: TCP  
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/health
            port: 2020
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/health
            port: 2020
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          failureThreshold: 5
          httpGet:
            path: /api/v1/health
            port: 2020
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
          - name: logs
            mountPath: /var/log/pods
          - name: db
            mountPath: /var/log/db
          - name: config-volume
            mountPath: /fluent-bit/etc/
{{- end }}
      initContainers:
      - name: tibtunnel-init
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        command: [{{- range $v := (mustRegexSplit " +" (include "tp-tibtunnel.helpers.command.configure" .) -1) -}}"{{- $v -}}",{{- end -}}]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: ACCESS_KEY
                name: {{ include "tp-tibtunnel.consts.appName" .}}
          - name: USE_FILE_LOGGING
            value: "true"
        {{- if .Values.global.tibco.enableResourceConstraints }}
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
          limits:
            cpu: 30m
            memory: 40Mi
        {{- end }}
        volumeMounts:
        - name: config-dir
          mountPath: /etc/config
        - name: logs
          mountPath: /tmp/logs
      {{ if .Values.provisionerAgentProbe.enable -}}
      - name: provisioner-agent-probe
        image: {{ include "tp-tibtunnel.image.registry" .}}{{"/"}}{{ include "tp-tibtunnel.image.repository" .}}{{"/"}}{{ .Values.image.name }}:{{ .Values.image.tag}}
        command: ["tp-tibtunnel","probe","--http","{{ tpl .Values.provisionerAgentProbe.url . }}","--interval","{{ .Values.provisionerAgentProbe.interval }}","--retries","{{.Values.provisionerAgentProbe.retries}}"]
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.global.tibco.enableResourceConstraints }}
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
          limits:
            cpu: 50m
            memory: 40Mi
        {{- end }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.global.tibco.dataPlaneId }} {{/* optional imagePullSecret for private repo. no op if secret does not exist */}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-dir
          emptyDir: {}
        - name: logs
          emptyDir: {}
{{- if .Values.global.tibco.cpCertificateSecret }}
        - name: cp-certs
          secret:
            defaultMode: 420
            secretName: {{ .Values.global.tibco.cpCertificateSecret }}       
{{- end }}
{{- if .Values.global.logging.fluentbit.enabled }}
        - name: db
          emptyDir: {}
        - name: config-volume
          configMap:
            name: tp-tibtunnel-fluentbit-config
{{- end }}
