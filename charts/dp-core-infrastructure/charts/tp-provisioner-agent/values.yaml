#
# Copyright Â© 2023 - 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#


# Resources
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 1000m
    memory: 1000Mi

# no of replicas
replicaCount: "1"

# log level for the provisioner agent
logLevel: "info"

image:
  name: infra-provisioner-agent
  tag: 356
  pullPolicy: Always

nodeSelector:
  kubernetes.io/os: linux

affinity: {}

tolerations: {}

enableIngress: true
ingress:
  annotations: {}
    # nginx custom annotation example
    # nginx.org/rewrites: "serviceName={{ include \"tp-provisioner-agent.consts.appName\" . }} rewrite=/" #https://github.com/nginxinc/kubernetes-ingress/tree/v2.4.2/examples/ingress-resources/rewrites
  pathPrefix: /tibco/agent/infra/provisioner-agent/
  className: "haproxy-dp-{{ .Values.global.tibco.dataPlaneId}}"  # Ex: nginx, haproxy

global:
  tibco:
    dataPlaneId: "abcd"
    subscriptionId: "sub1"
    controlPlaneUrl: "https://account.local.cic2.pro"
    serviceAccount: ""  # user provided service account.
    containerRegistry:
      url: reldocker.tibco.com
      repository: tibco-platform-docker-prod

  logging:
    fluentbit:
      enabled: true

    # The fluentbit configuration section.
    # It specifies that the fluentbit should not run as a non-root user and the user ID should be 0 (root).
    # Privilege escalation is not allowed for security reasons.
    # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
    # proxy configuration for the outward traffic from cp proxy
    # should have access to the proxy server and proxy server should have access to CP Subscription DNS domain
    proxy:
      httpProxy: ""    # http proxy to forward the http traffic. Ex : http://proxy.example.com:8080
      httpsProxy: ""    # https proxy to forward the https traffic. Ex: https://proxy.example.com:8080
      noProxy: ""     # comma separated list of domains to exclude from proxy. Ex: .example1.com,.example2.com
fluentbit:
  image:
    registry: cr.fluentbit.io/fluent/fluent-bit
    tag: 3.1.4
  # Resources
  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: 10m
      memory: 20Mi
    limits:
      cpu: 50m
      memory: 50Mi
hpa:
  minReplicas: 1
  maxReplicas: 3

# Pod Security Context configuration
# This configuration ensures that the pod is run with non-root privileges for enhanced security.
# The user, group, and filesystem group IDs are all set to 1000.
# The filesystem group change policy is set to "Always", meaning the filesystem group is always set to the fsGroup.
# The seccomp (secure computing mode) profile is set to RuntimeDefault, which means it uses the default profile provided by the runtime.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "Always"
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # This section of the configuration is for the provisioner agent.
  # It specifies that privilege escalation is not allowed for security reasons.
  # Additionally, it drops all capabilities, which is a common security practice to minimize potential risks.
  # GitHub issue: https://github.com/fluent/fluent-bit/issues/872#issuecomment-827763207, https://github.com/kyma-project/kyma/pull/11657/files
  provisionerAgent:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
