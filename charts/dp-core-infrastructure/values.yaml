# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

# Default values for dp-core-infrastructure.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  tibco:
    dataPlaneId: "abcd"
    subscriptionId: "sub1"
    controlPlaneUrl: "https://account.local.cic2.pro"  # Control Plane DNS domain
    serviceAccount: ""                                 # customer provided service account
    containerRegistry:
      url: "reldocker.tibco.com"
      # username: "test" # [optional] Create a imagePullSecret named <dpId> for private container registry.
      # password: "test"
      # email: "tibco-plt@cloud.com"

tp-tibtunnel:
  enabled: true
  connect:
    debug: true  # Enable debug logging
    payload: false  # Display payload data in the debug logs. Requires flag 'debug'. WARNING: Payload might contain sensitive data!
    dataChunkSize: ""  # Set the max size(in KB) of data for a single read/write operation, default is 32
    dataAckMode: false  # Enable/disable data ack
    remoteDebug: true  # Enable debug logging of this tunnel connection inside application (running in TIBCO Cloud)
    logFile: ""  # Full path to the output log file. If not specified, the logs will be printed on stdout
    configDir: ""  # Full path to the directory where to store the configuration file(s) (default "~/.tibtunnel")
    networkCheckUrl: "https://www.google.com"  # Url to check for network connectivity
    infiniteRetries: false  # Irrespective of any error, keep trying to discover and connect to establish hybrid connectivity
    url: ""  # Connect Url generated from TIBCO Cloud Control plane
    onPremHost: "haproxy-dp-{{ .Values.global.tibco.dataPlaneId }}.{{ .Release.Namespace }}.svc.cluster.local"  # service name of on prem host
    onPremPort: "80"  # port number of the service.
  configure:
    profile: ""  # The name of the profile to create or update
    accessKey: "abc"  # Specify the TIBCO AccessKey secret to be used for authentication

tp-provisioner-agent:
  enabled: true
  serviceAccount: ""
  ingress:
    annotations: {}
      # nginx custom annotation example
      # nginx.org/rewrites: "serviceName={{ include \"tp-provisioner-agent.consts.appName\" . }} rewrite=/" #https://github.com/nginxinc/kubernetes-ingress/tree/v2.4.2/examples/ingress-resources/rewrites
    pathPrefix: /tibco/agent/infra/provisioner-agent/
    className: "haproxy-dp-{{ .Values.global.tibco.dataPlaneId}}"

haproxy-ingress:
  enabled: true
  fullnameOverride: "haproxy-dp-{{ .Values.global.tibco.dataPlaneId}}"
  controller:
    ingressClass: "haproxy-dp-{{ .Values.global.tibco.dataPlaneId}}"
    ingressClassResource:
      enabled: true
      controllerClass: "{{ .Values.global.tibco.dataPlaneId }}"
    service:
      type: ClusterIP

config:
  enabled: true
